{"version":3,"sources":["views/Certainty/Certainty.js","views/Certainty/index.js"],"names":["CertaintyExplorer","lazy","__webpack_require__","e","then","bind","Editor","Promise","all","GanttChart","Container","_ref","children","dark","suspenseText","react_default","a","createElement","style","padding","backgroundColor","overflow","react","fallback","Loading","text","concat","withContainer","_ref2","props","Object","objectWithoutProperties","Component","Certainty_Container","renderTile","id","Certainty","_ref3","lib","className","resize","minimumPaneSizePercentage","initialValue","direction","first","second","splitPercentage","connect","state","editor"],"mappings":"iKAcMA,EAAoBC,eAAK,kBAAMC,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,aAC/BC,EAASL,eAAK,kBAAMM,QAAAC,IAAA,CAAAN,EAAAC,EAAA,GAAAD,EAAAC,EAAA,MAAAC,KAAAF,EAAAG,KAAA,aACpBI,EAAaR,eAAK,kBAAMM,QAAAC,IAAA,CAAAN,EAAAC,EAAA,GAAAD,EAAAC,EAAA,GAAAD,EAAAC,EAAA,KAAAC,KAAAF,EAAAG,KAAA,aAgBjBK,EAAY,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAUC,EAAbF,EAAaE,KAAMC,EAAnBH,EAAmBG,aAAnB,OACvBC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,QAAS,MAAOC,gBAAiBP,EAAO,UAAY,QAASQ,SAAU,SACnFN,EAAAC,EAAAC,cAACK,EAAA,SAAD,CAAUC,SAAUR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAASC,KAAI,GAAAC,OAAKZ,MAAqBF,KAKzDe,EAAgB,SAAAC,GAAA,IAAGd,EAAHc,EAAGd,aAAiBe,EAApBC,OAAAC,EAAA,EAAAD,CAAAF,EAAA,yBAAgC,SAAAI,GAAS,OAC7DjB,EAAAC,EAAAC,cAACgB,EAAD,CAAWpB,KAAMgB,EAAMhB,KAAMC,aAAcA,GACzCC,EAAAC,EAAAC,cAACe,EAAcH,MAKbK,EAAa,SAACrB,GAAD,OAAmB,SAACsB,GACrC,OAAQA,GACN,IAAK,WACH,OAAOR,EAAc,CACnBd,OACAC,aAAc,wBAFTa,CAGJ3B,GACL,IAAK,UACH,OAAO2B,EAAc,CACnBd,OACAC,aAAc,uBAFTa,CAGJlB,GACL,IAAK,YACH,OAAOkB,EAAc,CACnBd,OACAC,aAAc,4BAFTa,CAGJrB,GACL,QACE,OAAOS,EAAAC,EAAAC,cAAA,eA4BEmB,EAvBG,SAAAC,GAAoC,IAAjCxB,EAAiCwB,EAAjCxB,KACnB,OACEE,EAAAC,EAAAC,cAACqB,EAAA,OAAD,CACEC,UAAW1B,EAAO,kCAAoC,yBACtDqB,WAAYA,EAAWrB,GACvB2B,OAAQ,CACNC,0BAA2B,IAE7BC,aAAc,CACZC,UAAW,MACXC,MAAO,WACPC,OAAQ,CACNF,UAAW,SACXC,MAAO,UACPC,OAAQ,YACRC,gBAAiB,IAEnBA,gBAAiB,OC9EVC,sBAJS,SAAAC,GAAK,MAAK,CAChCnC,KAAMmC,EAAMC,OAAOpC,OAKnB,KAFakC,CAGbX","file":"static/js/26.9c0d32ee.chunk.js","sourcesContent":["// @flow\nimport React, { Suspense, lazy } from 'react';\nimport type { Node } from 'react';\n\n// Blueprint components\nimport { Mosaic } from 'react-mosaic-component';\n\n// Moasic CSS\nimport 'react-mosaic-component/react-mosaic-component.css';\n\n// Reusable Components\nimport Loading from '../../components/Loading';\n\n// Lazily import mosaic components\nconst CertaintyExplorer = lazy(() => import('../../tiles/CertaintyExplorer'));\nconst Editor = lazy(() => import('../../tiles/CertaintyEditor'));\nconst GanttChart = lazy(() => import('../../tiles/GanttChart'));\n\n// Flow Types\ntype ContainerProps = {\n  children: Node,\n  dark: boolean,\n  suspenseText: string,\n};\n\nexport type CertaintyProps = {\n  dark: boolean,\n  scenarioId: ?string,\n  display: 'switches' | 'matrix' | 'phases' | 'root' | void,\n};\n\n// Standard local container component\nexport const Container = ({ children, dark, suspenseText }: ContainerProps): Node => (\n  <div style={{ padding: '5px', backgroundColor: dark ? '#30404d' : 'white', overflow: 'auto' }}>\n    <Suspense fallback={<Loading text={`${suspenseText}`} />}>{children}</Suspense>\n  </div>\n);\n\n// Higher order function to wrap in local standard container\nconst withContainer = ({ suspenseText, ...props }) => Component => (\n  <Container dark={props.dark} suspenseText={suspenseText}>\n    <Component {...props} />\n  </Container>\n);\n\n// Returns a function to be passed to mosaic component\nconst renderTile = (dark: boolean) => (id: string): Node => {\n  switch (id) {\n    case 'explorer':\n      return withContainer({\n        dark,\n        suspenseText: 'Loading Strategy Map',\n      })(CertaintyExplorer);\n    case 'project':\n      return withContainer({\n        dark,\n        suspenseText: 'Loading Gantt Chart',\n      })(GanttChart);\n    case 'interface':\n      return withContainer({\n        dark,\n        suspenseText: 'Loading Certainty Editor',\n      })(Editor);\n    default:\n      return <div />;\n  }\n};\n\n// Model Editor Component Class\nconst Certainty = ({ dark }: CertaintyProps): Node => {\n  return (\n    <Mosaic\n      className={dark ? 'mosaic-blueprint-theme bp3-dark' : 'mosaic-blueprint-theme'}\n      renderTile={renderTile(dark)}\n      resize={{\n        minimumPaneSizePercentage: 10,\n      }}\n      initialValue={{\n        direction: 'row',\n        first: 'explorer',\n        second: {\n          direction: 'column',\n          first: 'project',\n          second: 'interface',\n          splitPercentage: 40,\n        },\n        splitPercentage: 20,\n      }}\n    />\n  );\n};\n\nexport default Certainty;\n","// @flow\nimport { connect } from 'react-redux';\nimport Certainty from './Certainty';\n\nconst mapStateToProps = state => ({\n  dark: state.editor.dark,\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Certainty);\n"],"sourceRoot":""}