{"version":3,"sources":["config/config.js","views/ModelEditor/styles.js","views/ModelEditor/ModelEditor.js","views/ModelEditor/index.js"],"names":["config","valueExplorer","title","tileContainer","dark","padding","backgroundColor","overflow","valueExplorerHeading","paddingBottom","ValueExplorer","lazy","__webpack_require__","e","then","bind","EditorPane","Promise","all","GanttChart","Container","_ref","children","suspenseText","react_default","a","createElement","style","react","fallback","Loading","text","concat","renderTile","id","ModelEditor_Container","html","ModelEditor","_ref2","lib","className","resize","minimumPaneSizePercentage","initialValue","direction","first","second","splitPercentage"],"mappings":"wIAAeA,UACA,CACXC,cAAe,CACbC,MAAO,6BCFAC,EAAgB,SAACC,GAAD,MAAoB,CAC/CC,QAAS,MACTC,gBAAiBF,EAAO,UAAY,QACpCG,SAAU,SAGCC,EAAuB,CAClCH,QAAS,MACTI,cAAe,GCeXC,EAAgBC,eAAK,kBAAMC,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,aAC3BC,EAAaL,eAAK,kBAAMM,QAAAC,IAAA,CAAAN,EAAAC,EAAA,GAAAD,EAAAC,EAAA,GAAAD,EAAAC,EAAA,MAAAC,KAAAF,EAAAG,KAAA,aACxBI,EAAaR,eAAK,kBAAMM,QAAAC,IAAA,CAAAN,EAAAC,EAAA,GAAAD,EAAAC,EAAA,GAAAD,EAAAC,EAAA,KAAAC,KAAAF,EAAAG,KAAA,aAGxBK,EAAY,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAUlB,EAAbiB,EAAajB,KAAMmB,EAAnBF,EAAmBE,aAAnB,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,MAAOxB,EAAcC,IACxBoB,EAAAC,EAAAC,cAACE,EAAA,SAAD,CAAUC,SAAUL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASC,KAAI,GAAAC,OAAKT,MAAqBD,KAKzDW,EAAa,SAAC7B,GAAD,OAAmB,SAAC8B,GACrC,OAAQA,GACN,IAAK,gBACH,OACEV,EAAAC,EAAAC,cAACS,EAAD,CAAW/B,KAAMA,EAAMmB,aAAa,0BAClCC,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAIT,MAAOnB,GAAuBR,EAAmBC,cAAcC,OACnEsB,EAAAC,EAAAC,cAAChB,EAAD,OAGN,IAAK,aACH,OACEc,EAAAC,EAAAC,cAACS,EAAD,CAAW/B,KAAMA,EAAMmB,aAAa,uBAClCC,EAAAC,EAAAC,cAACP,EAAD,OAGN,IAAK,aACH,OACEK,EAAAC,EAAAC,cAACS,EAAD,CAAW/B,KAAMA,EAAMmB,aAAa,uBAClCC,EAAAC,EAAAC,cAACV,EAAD,OAGN,QACE,OAAOQ,EAAAC,EAAAC,cAAA,eA2BEW,EAvBK,SAAAC,GAAsC,IAAnClC,EAAmCkC,EAAnClC,KACrB,OACEoB,EAAAC,EAAAC,cAACa,EAAA,OAAD,CACEC,UAAWpC,EAAO,kCAAoC,yBACtD6B,WAAYA,EAAW7B,GACvBqC,OAAQ,CACNC,0BAA2B,IAE7BC,aAAc,CACZC,UAAW,MACXC,MAAO,gBACPC,OAAQ,CACNF,UAAW,SACXC,MAAO,aACPC,OAAQ,aACRC,gBAAiB,IAEnBA,gBAAiB,OC7EVV","file":"static/js/27.63acd73a.chunk.js","sourcesContent":["export default {\n  modelEditor: {\n    valueExplorer: {\n      title: 'Value Explorer',\n    },\n  },\n};\n","// @flow\nexport const tileContainer = (dark: boolean) => ({\n  padding: '5px',\n  backgroundColor: dark ? '#30404d' : 'white',\n  overflow: 'auto',\n});\n\nexport const valueExplorerHeading = {\n  padding: '7px',\n  paddingBottom: 0,\n};\n","// @flow\nimport React, { Suspense, lazy } from 'react';\nimport type { Node } from 'react';\n\n// Blueprint components\nimport { H5 } from '@blueprintjs/core';\nimport { Mosaic } from 'react-mosaic-component';\n\n// Mosaic CSS\nimport 'react-mosaic-component/react-mosaic-component.css';\n\n// Configuration Variables\nimport config from '../../config/config';\n\n// Reusable Components\nimport Loading from '../../components/Loading';\n\n// Styles\nimport { tileContainer, valueExplorerHeading } from './styles';\n\n// Flow Types\nimport { type ContainerProps, type ModelEditorProps } from './types';\n\n// Lazily import mosaic tiles\nconst ValueExplorer = lazy(() => import('../../tiles/ValueExplorer'));\nconst EditorPane = lazy(() => import('../../tiles/Editor'));\nconst GanttChart = lazy(() => import('../../tiles/GanttChart'));\n\n// Standard local container component\nconst Container = ({ children, dark, suspenseText }: ContainerProps): Node => (\n  <div style={tileContainer(dark)}>\n    <Suspense fallback={<Loading text={`${suspenseText}`} />}>{children}</Suspense>\n  </div>\n);\n\n// Render a mosaic tile\nconst renderTile = (dark: boolean) => (id: string): Node => {\n  switch (id) {\n    case 'valueExplorer':\n      return (\n        <Container dark={dark} suspenseText=\"Loading Value Explorer\">\n          <H5 style={valueExplorerHeading}>{config.modelEditor.valueExplorer.title}</H5>\n          <ValueExplorer />\n        </Container>\n      );\n    case 'ganttChart':\n      return (\n        <Container dark={dark} suspenseText=\"Loading Gantt Chart\">\n          <GanttChart />\n        </Container>\n      );\n    case 'editorPane':\n      return (\n        <Container dark={dark} suspenseText=\"Loading Editor Pane\">\n          <EditorPane />\n        </Container>\n      );\n    default:\n      return <div />;\n  }\n};\n\nconst ModelEditor = ({ dark }: ModelEditorProps): Node => {\n  return (\n    <Mosaic\n      className={dark ? 'mosaic-blueprint-theme bp3-dark' : 'mosaic-blueprint-theme'}\n      renderTile={renderTile(dark)}\n      resize={{\n        minimumPaneSizePercentage: 10,\n      }}\n      initialValue={{\n        direction: 'row',\n        first: 'valueExplorer',\n        second: {\n          direction: 'column',\n          first: 'ganttChart',\n          second: 'editorPane',\n          splitPercentage: 40,\n        },\n        splitPercentage: 20,\n      }}\n    />\n  );\n};\n\nexport default ModelEditor;\n","// @flow\nimport ModelEditor from './ModelEditor';\nexport default ModelEditor;\n"],"sourceRoot":""}