{"version":3,"sources":["components/InputComponents/Matrix.js","components/Form/useFormValidation.js","components/EquationInput/selectors.js","components/EquationInput/index.js","components/MeasureSelector/index.js","components/Form/Form.js","../node_modules/@blueprintjs/select/lib/esm/common/classes.js","../node_modules/@blueprintjs/select/lib/esm/common/index.js","../node_modules/@blueprintjs/select/lib/esm/common/itemListRenderer.js","../node_modules/@blueprintjs/select/lib/esm/common/listItemsProps.js","../node_modules/@blueprintjs/select/lib/esm/common/listItemsUtils.js","../node_modules/@blueprintjs/select/lib/esm/components/query-list/queryList.js","components/Form/index.js","components/ConfirmPopover/ConfirmPopover.js","components/ConfirmPopover/index.js","tiles/CertaintyEditor/selectors.js","tiles/CertaintyEditor/Header/selectors.js","tiles/CertaintyEditor/Header/Breadcrumbs.js","tiles/CertaintyEditor/Header/styles.js","tiles/CertaintyEditor/Header/Toolbar.js","tiles/CertaintyEditor/Header/index.js","tiles/CertaintyEditor/ScenarioForm.js","tiles/CertaintyEditor/BenefitSensitivity.js","tiles/CertaintyEditor/DeliverableSensitivity.js","tiles/CertaintyEditor/PhaseSensitivity.js","tiles/CertaintyEditor/BenefitBuildupSensitivity.js","tiles/CertaintyEditor/PhaseCostSensitivity.js","tiles/CertaintyEditor/index.js"],"names":["returnData","values","rowId","columnId","idsFromIndex","x","y","rowIndex","columnIndex","id","renderCell","updateValues","setChanged","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","_blueprintjs_table__WEBPACK_IMPORTED_MODULE_7__","onConfirm","val","rowIdx","colIdx","newValue","oldValues","ids","Number","parseFloat","Object","_home_alexj_Workspace_Workspace_vmt_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","_home_alexj_Workspace_Workspace_vmt_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","handleConfirm","value","apply","concat","_home_alexj_Workspace_Workspace_vmt_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","renderRowHeader","_blueprintjs_table__WEBPACK_IMPORTED_MODULE_8__","name","Matrix","_ref","handleSubmit","typeKey","_useState","useState","_useState2","_home_alexj_Workspace_Workspace_vmt_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","inputValues","setInputValues","_useState3","_useState4","changed","_blueprintjs_table__WEBPACK_IMPORTED_MODULE_10__","numRows","length","rowHeaderCellRenderer","map","col","_blueprintjs_table__WEBPACK_IMPORTED_MODULE_9__","key","cellRenderer","renderColumns","_blueprintjs_core__WEBPACK_IMPORTED_MODULE_5__","style","position","bottom","right","type","text","disabled","onClick","intent","Intent","SUCCESS","large","useFormValidation","initialState","validate","warn","model","update","_React$useState","React","_React$useState2","slicedToArray","setValues","_React$useState3","_React$useState4","errors","setErrors","_React$useState5","_React$useState6","warnings","setWarnings","_React$useState7","_React$useState8","isSubmitting","setSubmitting","_React$useState9","_React$useState10","touched","setTouched","useEffect","keys","event","preventDefault","validationErrors","validationWarnings","handleChange","objectSpread","defineProperty","target","handleBlur","getOptions","state","_API$getProgramme","API","measures","parameters","stakeholders","measureOptions","reduce","options","measure","push","replace","parameterOptions","parameter","stakeholder","connect","props","initialValue","objectWithoutProperties","react_default","bundle_default","assign","width","Component","trigger","spacer","matchAny","renderItem","active","itemProps","isSelected","includes","menuItem","modifiers","icon","handleClick","renderTag","handleItemSelect","setActive","m","filter","toConsumableArray","programmes","activeMeasures","found","find","Error","multiSelect","selectedItems","items","itemRenderer","onItemSelect","tagRenderer","tagInputProps","onRemove","index","idx","popoverProps","__webpack_require__","d","__webpack_exports__","Form_SubmitButton","submitButtonStyle","SubmitButton","buttons","ErrorInputIcon","tag","minimal","DANGER","WarningInputIcon","WARNING","PercentageInputIcon","PRIMARY","TextInput","helperText","error","warning","DEFAULT","IconComponent","formGroup","label","labelInfo","inputGroup","onChange","onBlur","placeholder","rightElement","TextAreaInput","textArea","fill","DateInput","dateValue","moment","DATE_FORMAT","toDate","dateInput","selectedDate","userChange","format","inputProps","dayPickerProps","parseDate","dateStr","formatDate","dateObj","maxDate","canClearSelection","SelectInput","item","htmlSelect","NumberInput","clamp","minValue","maxValue","numericInput","onValueChange","num","str","isNaN","clampValueOnBlur","min","max","allowNumericCharactersOnly","PercentageInput","modifiedValue","minorStepSize","majorStepSize","ThemeMeasuresInput","components_MeasureSelector","newValues","SwitchInput","controls","checked","EquationInput","components_EquationInput","formData","initialValues","handleUpdate","fields","validationProps","onSubmit","field","Form_TextInput","Form_TextAreaInput","Form_NumberInput","Form_PercentageInput","Form_DateInput","Form_SelectInput","Form_SwitchInput","Form_EquationInput","Array","isArray","Form_ThemeMeasuresInput","renderField","NS","getClassNamespace","MULTISELECT","MULTISELECT_POPOVER","OMNIBAR","OMNIBAR_OVERLAY","SELECT","SELECT_POPOVER","classes_namespaceObject","renderFilteredItems","noResults","initialContent","query","undefined","filteredItems","executeItemsEqual","_blueprintjs_core__WEBPACK_IMPORTED_MODULE_0__","itemsEqualProp","itemA","itemB","isFunction","getCreateNewItem","__blueprintCreateNewItemBrand","isCreateNewItem","getActiveItem","activeItem","QueryList","tslib__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","_blueprintjs_core__WEBPACK_IMPORTED_MODULE_2__","_blueprintjs_core__WEBPACK_IMPORTED_MODULE_3__","_blueprintjs_core__WEBPACK_IMPORTED_MODULE_4__","_common__WEBPACK_IMPORTED_MODULE_5__","_common__WEBPACK_IMPORTED_MODULE_6__","_common__WEBPACK_IMPORTED_MODULE_7__","_super","context","_this","call","this","refHandlers","itemsParent","ref","itemsParentRef","shouldCheckActiveItemInViewport","expectedNextActiveItem","renderItemList","listProps","_a","maybeNoResults","isCreateItemRendered","menuContent","createItemView","renderCreateItemMenuItem","ulRef","matchesPredicate","indexOf","itemsEqual","isItemDisabled","itemDisabled","e","isActive","safeInvoke","createNewItemRenderer","evt","handleItemCreate","createNewItemFromQuery","setQuery","setActiveItem","resetOnSelect","handlePaste","queries","nextActiveItem","onItemsPaste","nextQueries","pastedItemsToEmit","_i","queries_1","equalItem","getMatchingItem","canCreateItems","newItem","join","handleKeyDown","keyCode","ARROW_UP","ARROW_DOWN","getNextActiveItem","onKeyDown","handleKeyUp","onKeyUp","ENTER","handleQueryChange","onQueryChange","createNewItem","getFilteredItems","getFirstEnabledItem","ofType","prototype","render","className","renderer","_b","itemListRenderer","_c","spreadableState","itemList","componentWillReceiveProps","nextProps","setState","resetOnQuery","componentDidUpdate","prevProps","shallowCompareKeys","include","requestAnimationFrame","scrollActiveItemIntoView","scrollToActiveItem","externalChangeToActiveItem","activeElement","getActiveElement","activeTop","offsetTop","activeHeight","offsetHeight","parentOffsetTop","parentScrollTop","scrollTop","parentHeight","clientHeight","getItemsParentPadding","paddingTop","activeBottomEdge","paddingBottom","activeTopEdge","resetActiveItem","hasQueryChanged","activeIndex","getActiveIndex","shouldUpdateActiveItem","children","i","getComputedStyle","pxToNumber","direction","startIndex","onActiveItemChange","wouldCreatedItemMatchSomeExistingItem","some","displayName","defaultProps","parseInt","slice","itemPredicate","itemListPredicate","maxIndex","_Form__WEBPACK_IMPORTED_MODULE_0__","Form","ConfirmPopover","title","dismissLabel","confirmLabel","popover","padding","html","t","text_text","display","justifyContent","marginTop","Classes","POPOVER_DISMISS","marginRight","getInitialValues","scenarioId","definition","getCertaintyDisplay","selected","certainty","explorer","CONSTANTS","getSelectedScenarioId","getMatrixValues","matrix","foundScenario","scenario","getBenefitSensitivityValues","benefitSensitivity","entry","sensitivity","getBreadcrumbsData","programme","scenarios","modelBreadcrumb","programmeBreadcrumb","scenariosBreadcrumb","s","breadcrumbs","selectors","breadcrumbs_breadcrumbs","certaintyHeaderContainer","dark","top","left","zIndex","borderBottomStyle","borderBottomWidth","borderBottomColor","backgroundColor","toolbarContainer","margin","minHeight","ResetButton","button","handleReset","buttonGroup","float","small","console","log","_ref2","Toolbar_ResetButton","Header","Breadcrumbs","Header_Toolbar","ConnectedForm","ownProps","SCENARIO_FORM","dispatch","updateAtom","SCENARIO_KEY","ScenarioForm","SensitivityInput","inline","BenefitSensitivityItem","_ref3","benefit","switchState","handleSwitchChange","handleSensitivityChange","BENEFIT_TYPE_FINANCIAL","card","marginBottom","BenefitSensitivity_SwitchInput","BenefitSensitivity_SensitivityInput","renderBenefitSensitivityItem","currentValues","setCurrentValues","foundSensitivity","switch","handleSwitchCallback","targetId","filteredValues","foundValue","handleSensitivityCallback","BenefitSensitivity_BenefitSensitivityItem","benefits","handleSave","updateSensitivity","_ref4","flexWrap","Form_Form","DeliverableSensitivityItem","deliverable","renderDeliverableSensitivityItem","DeliverableSensitivity_DeliverableSensitivityItem","deliverables","deliverableSensitivity","DurationInput","StartDateInput","PhaseSensitivityItem","phase","duration","start","handleDurationChange","handleStartChange","slip","PHASE_SLIP_RULE_FIXED","PhaseSensitivity_DurationInput","PhaseSensitivity_StartDateInput","renderPhaseSensitivityItem","handleDurationCallback","handleStartCallback","handleStartDateChange","PhaseSensitivity_PhaseSensitivityItem","phases","phaseSensitivity","editor","BenefitBuildupSensitivity","PhaseCostSensitivity","CertaintyEditor_BenefitSensitivity","CertaintyEditor_DeliverableSensitivity","CertaintyEditor_PhaseSensitivity","renderInput"],"mappings":"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","file":"static/js/12.f1f68892.chunk.js","sourcesContent":["// @flow\nimport React, { useState } from 'react';\nimport type { Node } from 'react';\n\nimport { Button, Intent } from '@blueprintjs/core';\nimport { Column, Table, EditableCell, RowHeaderCell } from '@blueprintjs/table';\n\n// Flow Types\ntype Values = { [string]: { [string]: number } };\n\ntype Axis = Array<{ id: string, name: string }>;\n\ntype UpdateValues = (values: Values) => void;\n\ntype HandleSubmit = (typeKey: string, values: Values) => void;\n\nexport type MatrixProps = {\n  x: Axis,\n  y: Axis,\n  handleSubmit: HandleSubmit,\n  updateValues: UpdateValues,\n  typeKey: string,\n  values: Values,\n};\n\n// Returns data item from values prop\nconst returnData = (values: Values, rowId: string, columnId: string): number => {\n  return values[rowId][columnId];\n};\n\n// Retreives ids from index\nconst idsFromIndex = (x: Axis, y: Axis, rowIndex: number, columnIndex: number) => {\n  return [x[rowIndex].id, y[columnIndex].id];\n};\n\n// Correctly calls redux store function updateValues\nconst handleConfirm = (\n  newValue,\n  oldValues,\n  x,\n  y,\n  rowIndex,\n  columnIndex,\n  updateValues,\n  setChanged\n) => {\n  const ids = idsFromIndex(x, y, rowIndex, columnIndex);\n  if (Number.parseFloat(newValue) !== oldValues[ids[0]][ids[1]]) {\n    setChanged(true);\n  }\n  const values = {\n    ...oldValues,\n    [ids[0]]: {\n      ...oldValues[ids[0]],\n      [ids[1]]: Number.parseFloat(newValue),\n    },\n  };\n  updateValues(values);\n};\n\n// Renders a cell with values from prop\nconst renderCell = (values: Values, x: Axis, y: Axis, updateValues: UpdateValues, setChanged) => (\n  rowIndex: number,\n  columnIndex: number\n): Node => {\n  return (\n    <EditableCell\n      onConfirm={(val, rowIdx, colIdx) =>\n        handleConfirm(val, values, x, y, rowIdx, colIdx, updateValues, setChanged)\n      }\n      rowIndex={rowIndex}\n      columnIndex={columnIndex}\n      value={returnData(values, ...idsFromIndex(x, y, rowIndex, columnIndex))}\n    />\n  );\n};\n\n// Renders the row headers based on axis names\nconst renderRowHeader = (x: Axis) => (rowIndex: number): Node => {\n  return <RowHeaderCell>{x[rowIndex].name}</RowHeaderCell>;\n};\n\n// Renders the columns (and also cells) based on props\nconst renderColumns = (\n  values: Values,\n  x: Axis,\n  y: Axis,\n  updateValues: UpdateValues,\n  typeKey: string,\n  setChanged\n) => {\n  return y.map(col => (\n    <Column\n      key={`MATRIX_${typeKey}_${col.id}`}\n      name={col.name}\n      cellRenderer={renderCell(values, x, y, updateValues, setChanged)}\n    />\n  ));\n};\n\n// Renders the matrix componenet\nconst Matrix = ({ x, y, handleSubmit, typeKey, values }: MatrixProps) => {\n  const [inputValues, setInputValues] = useState(values);\n  const [changed, setChanged] = useState(false);\n  return (\n    <div>\n      <Table numRows={x.length} rowHeaderCellRenderer={renderRowHeader(x)}>\n        {renderColumns(inputValues, x, y, setInputValues, typeKey, setChanged)}\n      </Table>\n      <Button\n        style={{ position: 'fixed', bottom: '30px', right: '50px' }}\n        type=\"submit\"\n        text=\"Save Changes\"\n        disabled={!changed}\n        onClick={() => {\n          handleSubmit(typeKey, inputValues);\n          setChanged(false);\n        }}\n        intent={Intent.SUCCESS}\n        large\n      />\n    </div>\n  );\n};\n\nexport default Matrix;\n","// @flow\nimport React from 'react';\n\n// Flow Types\nimport { type FormState, type Validate, type Warn, type Update } from './types';\nimport { type Model } from '../../model/api/types';\n\n// Custom react hook\nfunction useFormValidation(\n  initialState: FormState,\n  validate: Validate,\n  warn: Warn,\n  model: Model,\n  update: Update\n) {\n  // Store current values of form in state\n  const [values, setValues] = React.useState(initialState);\n\n  // Store current errors and warnings in state\n  const [errors, setErrors] = React.useState({});\n  const [warnings, setWarnings] = React.useState({});\n\n  // Keep track of whether form is submitting\n  const [isSubmitting, setSubmitting] = React.useState(false);\n\n  // Keep track of whether form has been touched or not\n  const [touched, setTouched] = React.useState(false);\n\n  // Side effect, dependent on errors, submtting, and values\n  React.useEffect(() => {\n    if (isSubmitting) {\n      const noErrors = Object.keys(errors).length === 0;\n      if (noErrors) {\n        update(values);\n        setSubmitting(false);\n        setTouched(false);\n      } else {\n        setSubmitting(false);\n      }\n    }\n  }, [errors, isSubmitting, update, values]);\n\n  // Side effect for updated form values on different ids\n  React.useEffect(() => {\n    setValues(initialState);\n  }, [initialState]);\n\n  // Handles the change of an input value\n  function handleChange(event: SyntheticInputEvent<HTMLInputElement>) {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value,\n    });\n\n    setTouched(true);\n  }\n\n  // Validates when user blurs the field\n  function handleBlur() {\n    const validationErrors = validate(values, model);\n    setErrors(validationErrors);\n\n    const validationWarnings = warn(values, model);\n    setWarnings(validationWarnings);\n\n    setTouched(true);\n  }\n\n  // Function for handling the submit of data\n  function handleSubmit(event: SyntheticInputEvent<HTMLInputElement>) {\n    event.preventDefault();\n\n    const validationErrors = validate(values, model);\n    setErrors(validationErrors);\n    const validationWarnings = warn(values, model);\n    setWarnings(validationWarnings);\n\n    setSubmitting(true);\n  }\n\n  // Return hook outputs as object\n  return {\n    handleSubmit,\n    handleChange,\n    handleBlur,\n    values,\n    errors,\n    warnings,\n    isSubmitting,\n    touched,\n  };\n}\n\nexport default useFormValidation;\n","// @flow\nimport * as API from '../../model/api';\nimport { type State } from '../../reducers/types';\n\nimport { type Options } from './types';\n\nexport const getOptions = (state: State): Options => {\n  const { model } = state;\n  const { measures, parameters, stakeholders } = API.getProgramme(model);\n\n  const measureOptions = measures.reduce((options, measure) => {\n    options.push(`mb_${measure.name.replace(/ /gi, '_')}`);\n    options.push(`ms_${measure.name.replace(/ /gi, '_')}`);\n    options.push(`mc_${measure.name.replace(/ /gi, '_')}`);\n    return options;\n  }, []);\n  const parameterOptions = parameters.reduce((options, parameter) => {\n    options.push(parameter.name);\n    return options;\n  }, measureOptions);\n  const stakeholderOptions = stakeholders.reduce((options, stakeholder) => {\n    options.push(`sr_${stakeholder.name.replace(/ /gi, '_')}`);\n    options.push(`sm_${stakeholder.name.replace(/ /gi, '_')}`);\n    return options;\n  }, parameterOptions);\n\n  return stakeholderOptions;\n};\n","// @flow\nimport React from 'react';\nimport { connect } from 'react-redux';\n\n// Selectors\nimport { getOptions } from './selectors';\n\n// Autocomplete component\nimport AutoInput from 'react-autocomplete-input';\n\n// Overrride style sheet\nimport './custom.css';\n\n// Flow Types\nimport { type EquationInputProps } from './types';\n\nexport const EquationInput = ({ options, initialValue, ...props }: EquationInputProps) => {\n  return (\n    <AutoInput\n      style={{ width: '100%' }}\n      Component={'input'}\n      options={options}\n      trigger={''}\n      spacer={' '}\n      matchAny={true}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = state => ({\n  options: getOptions(state),\n});\n\nexport default connect(\n  mapStateToProps,\n  () => ({})\n)(EquationInput);\n","// @flow\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport { MenuItem } from '@blueprintjs/core';\nimport { MultiSelect } from '@blueprintjs/select';\n\nimport './overrides.css';\n\nimport { type Measure } from '../../model/api/types';\nimport { type State } from '../../reducers/types';\n\ntype MeasureSelectorProps = {\n  measures: Array<Measure>,\n  active: Array<string>,\n  setActive: (Array<string>) => void,\n};\n\ntype ItemProps = {\n  handleClick: (SyntheticInputEvent<HTMLButtonElement>) => void,\n  index: number,\n  modifiers: {\n    active: boolean,\n    disabled: boolean,\n    matchesPredicate: boolean,\n  },\n};\n\nconst renderItem = (active: Array<Measure>) => (measure: Measure, itemProps: ItemProps) => {\n  const isSelected = active.map(a => a.id).includes(measure.id);\n  return (\n    <MenuItem\n      key={`MEASURE_THEME_SELECT_VALUE_${measure.id}`}\n      text={measure.name}\n      active={itemProps.modifiers.active}\n      icon={isSelected ? 'tick' : 'blank'}\n      onClick={itemProps.handleClick}\n    />\n  );\n};\n\nconst renderTag = (measure: Measure) => {\n  return measure.name;\n};\n\nconst handleItemSelect = (active: Array<Measure>, setActive: (Array<string>) => void) => (\n  measure: Measure\n) => {\n  if (active.map(m => m.id).includes(measure.id)) {\n    setActive(active.filter(m => m.id !== measure.id).map(m => m.id));\n  } else {\n    setActive([...active.map(m => m.id), measure.id]);\n  }\n};\n\nexport const MeasureSelector = ({ measures, active, setActive }: MeasureSelectorProps) => {\n  const activeMeasures = active.map(id => {\n    const found = measures.find(measure => measure.id === id);\n    if (!found) {\n      throw new Error('Selected measure was not found');\n    }\n    return found;\n  });\n\n  return (\n    <div style={{ width: '100%' }}>\n      <MultiSelect\n        selectedItems={activeMeasures}\n        items={measures}\n        itemRenderer={renderItem(activeMeasures)}\n        onItemSelect={handleItemSelect(activeMeasures, setActive)}\n        tagRenderer={renderTag}\n        tagInputProps={{\n          onRemove: (value, index) =>\n            setActive(activeMeasures.filter((m, idx) => idx !== index).map(m => m.id)),\n        }}\n        popoverProps={{\n          position: 'auto-end',\n        }}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: State) => ({\n  measures: state.model.programmes[0].measures,\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(MeasureSelector);\n","// @flow\nimport React from 'react';\n\n// Use moment for parsing dates\nimport moment from 'moment';\nimport { DATE_FORMAT } from '../../config/constants';\n\n// Hooks\nimport useFormValidation from './useFormValidation';\n\n// Blueprint Components\nimport {\n  Button,\n  FormGroup,\n  HTMLSelect,\n  InputGroup,\n  Intent,\n  NumericInput,\n  Switch,\n  Tag,\n  TextArea,\n} from '@blueprintjs/core';\nimport { DateInput as BPDateInput } from '@blueprintjs/datetime';\n\n// Reusable Components\nimport RUEquationInput from '../EquationInput';\nimport MeasureSelector from '../MeasureSelector';\n\n// Flow Types\nimport { type FormProps, type Field, type ValidationProps, type SelectItem } from './types';\n\ntype HandleChange = any => void;\ntype HandleBlur = any => void;\n\n// Submit Button\ntype SubmitButtonProps = {\n  disabled?: boolean,\n  onClick?: (event: SyntheticInputEvent<HTMLButtonElement>) => void,\n};\nconst submitButtonStyle = { position: 'fixed', bottom: '30px', right: '50px' };\nexport const SubmitButton = (props: SubmitButtonProps) => (\n  <Button\n    style={submitButtonStyle}\n    type=\"submit\"\n    text=\"Save Changes\"\n    intent={Intent.SUCCESS}\n    large\n    {...props}\n  />\n);\n\n// Input Icons\nconst ErrorInputIcon = () => <Tag minimal disabled icon=\"error\" intent={Intent.DANGER} />;\nconst WarningInputIcon = () => <Tag minimal disabled icon=\"warning-sign\" intent={Intent.WARNING} />;\nconst PercentageInputIcon = () => (\n  <Tag minimal disabled icon=\"percentage\" intent={Intent.PRIMARY} />\n);\n\n// Text Input Component\ntype TextInputProps = {\n  ...Field,\n  value: string,\n  handleChange: HandleChange,\n  handleBlur: HandleBlur,\n  error: ?string,\n  warning: ?string,\n};\nconst TextInput = (props: TextInputProps) => {\n  // Decide helper text\n  const helperText = props.error || props.warning || props.helperText;\n\n  // Decide intent\n  const intent =\n    (props.error && Intent.DANGER) || (props.warning && Intent.WARNING) || Intent.DEFAULT;\n\n  // Decide icon component\n  const IconComponent = (props.error && ErrorInputIcon) || (props.warning && WarningInputIcon);\n  return (\n    <FormGroup\n      label={props.label}\n      labelInfo={props.labelInfo}\n      helperText={helperText}\n      intent={intent}\n    >\n      <InputGroup\n        intent={intent}\n        type=\"text\"\n        name={props.name}\n        value={props.value}\n        onChange={props.handleChange}\n        onBlur={props.handleBlur}\n        placeholder={props.placeholder}\n        rightElement={IconComponent && <IconComponent />}\n      />\n    </FormGroup>\n  );\n};\n\n// Text Area Input Component\ntype TextAreaInputProps = {\n  ...Field,\n  value: string,\n  handleChange: HandleChange,\n  handleBlur: HandleBlur,\n  error: ?string,\n  warning: ?string,\n};\nconst TextAreaInput = (props: TextAreaInputProps) => {\n  // Decide helper text\n  const helperText = props.error || props.warning || props.helperText;\n\n  // Decide intent\n  const intent =\n    (props.error && Intent.DANGER) || (props.warning && Intent.WARNING) || Intent.DEFAULT;\n\n  return (\n    <FormGroup\n      label={props.label}\n      labelInfo={props.labelInfo}\n      helperText={helperText}\n      intent={intent}\n    >\n      <TextArea\n        fill\n        intent={intent}\n        name={props.name}\n        value={props.value}\n        onChange={props.handleChange}\n        onBlur={props.handleBlur}\n        placeholder={props.placeholder}\n      />\n    </FormGroup>\n  );\n};\n\n// Date Input Component\ntype DateInputProps = {\n  name: string,\n  label: string,\n  labelInfo?: string,\n  helperText?: string,\n  placeholder?: string,\n  value: string,\n  handleChange: HandleChange,\n  handleBlur: HandleBlur,\n  error: ?string,\n  warning: ?string,\n};\nconst DateInput = (props: DateInputProps) => {\n  // Decide helper text\n  const helperText = props.error || props.warning || props.helperText;\n\n  // Decide intent\n  const intent =\n    (props.error && Intent.DANGER) || (props.warning && Intent.WARNING) || Intent.DEFAULT;\n\n  // Decide icon component\n  const IconComponent = (props.error && ErrorInputIcon) || (props.warning && WarningInputIcon);\n\n  // Parse date as JS date object\n  const dateValue = moment(props.value, DATE_FORMAT, true).toDate();\n\n  // Create custom handle for blueprint date component\n  const handleDateChange = (selectedDate: Date, userChange: boolean) => {\n    if (userChange) {\n      props.handleChange({\n        target: { name: props.name, value: moment(selectedDate).format(DATE_FORMAT) },\n      });\n    }\n  };\n\n  return (\n    <FormGroup\n      label={props.label}\n      labelInfo={props.labelInfo}\n      helperText={helperText}\n      intent={intent}\n    >\n      <BPDateInput\n        intent={intent}\n        value={dateValue}\n        onChange={handleDateChange}\n        inputProps={{ onBlur: props.handleBlur }}\n        dayPickerProps={{ onBlur: props.handleBlur }}\n        placeholder={props.placeholder}\n        rightElement={IconComponent && <IconComponent />}\n        parseDate={dateStr => moment(dateStr, DATE_FORMAT, true).toDate()}\n        formatDate={dateObj => moment(dateObj).format(DATE_FORMAT)}\n        maxDate={moment('2040-12-31', DATE_FORMAT, true).toDate()}\n        canClearSelection={false}\n      />\n    </FormGroup>\n  );\n};\n\n// Select Input Component\ntype SelectInputProps = {\n  name: string,\n  label: string,\n  labelInfo?: string,\n  helperText?: string,\n  placeholder?: string,\n  items: Array<SelectItem<string>>,\n  value: string,\n  handleChange: HandleChange,\n  handleBlur: HandleBlur,\n  error: ?string,\n  warning: ?string,\n};\nconst SelectInput = (props: SelectInputProps) => {\n  // Decide helper text\n  const helperText = props.error || props.warning || props.helperText;\n\n  // Decide intent\n  const intent =\n    (props.error && Intent.DANGER) || (props.warning && Intent.WARNING) || Intent.DEFAULT;\n\n  // Create option nodes\n  const options = props.items.map(item => (\n    <option key={item.id} value={item.value}>\n      {item.label}\n    </option>\n  ));\n\n  return (\n    <FormGroup\n      label={props.label}\n      labelInfo={props.labelInfo}\n      helperText={helperText}\n      intent={intent}\n    >\n      <HTMLSelect\n        intent={intent}\n        name={props.name}\n        value={props.value}\n        onChange={props.handleChange}\n        onBlur={props.handleBlur}\n        placeholder={props.placeholder}\n      >\n        {options}\n      </HTMLSelect>\n    </FormGroup>\n  );\n};\n\n// Number Input Component\ntype NumberInputProps = {\n  name: string,\n  label: string,\n  labelInfo?: string,\n  helperText?: string,\n  placeholder?: string,\n  minValue?: string,\n  maxValue?: string,\n  value: number | string,\n  handleChange: HandleChange,\n  handleBlur: HandleBlur,\n  error: ?string,\n  warning: ?string,\n};\nconst NumberInput = (props: NumberInputProps) => {\n  // Decide helper text\n  const helperText = props.error || props.warning || props.helperText;\n\n  // Decide intent\n  const intent =\n    (props.error && Intent.DANGER) || (props.warning && Intent.WARNING) || Intent.DEFAULT;\n\n  // Decide icon component\n  const IconComponent = (props.error && ErrorInputIcon) || (props.warning && WarningInputIcon);\n\n  // Decide boundary conditions\n  const clamp = typeof props.minValue === 'number' || typeof props.maxValue === 'number';\n\n  // Create custom handle for blueprint component\n  const handleValueChange = (num, str) => {\n    if (Number.isNaN(num) || str[str.length - 1] === '.') {\n      props.handleChange({ target: { name: props.name, value: str } });\n    } else {\n      props.handleChange({ target: { name: props.name, value: num } });\n    }\n  };\n\n  return (\n    <FormGroup\n      label={props.label}\n      labelInfo={props.labelInfo}\n      helperText={helperText}\n      intent={intent}\n    >\n      <NumericInput\n        intent={intent}\n        name={props.name}\n        value={props.value}\n        onValueChange={handleValueChange}\n        onBlur={props.handleBlur}\n        placeholder={props.placeholder}\n        rightElement={IconComponent && <IconComponent />}\n        clampValueOnBlur={clamp}\n        min={props.minValue}\n        max={props.maxValue}\n        allowNumericCharactersOnly={false}\n      />\n    </FormGroup>\n  );\n};\n\n// Percentage Input Component\ntype PercentageInputProps = {\n  name: string,\n  label: string,\n  labelInfo?: string,\n  helperText?: string,\n  placeholder?: string,\n  value: number | string,\n  handleChange: HandleChange,\n  handleBlur: HandleBlur,\n  error: ?string,\n  warning: ?string,\n};\nconst PercentageInput = (props: PercentageInputProps) => {\n  // Decide helper text\n  const helperText = props.error || props.warning || props.helperText;\n\n  // Decide intent\n  const intent =\n    (props.error && Intent.DANGER) || (props.warning && Intent.WARNING) || Intent.DEFAULT;\n\n  // Decide icon component\n  const IconComponent =\n    (props.error && ErrorInputIcon) || (props.warning && WarningInputIcon) || PercentageInputIcon;\n\n  // Create custom handle for blueprint component\n  const handleValueChange = (num, str) => {\n    if (Number.isNaN(num) || str[str.length - 1] === '.') {\n      props.handleChange({ target: { name: props.name, value: str } });\n    } else {\n      props.handleChange({ target: { name: props.name, value: num / 100 } });\n    }\n  };\n\n  let modifiedValue = props.value;\n  if (typeof props.value === 'number') {\n    modifiedValue = props.value * 100;\n  }\n\n  return (\n    <FormGroup\n      label={props.label}\n      labelInfo={props.labelInfo}\n      helperText={helperText}\n      intent={intent}\n    >\n      <NumericInput\n        intent={intent}\n        name={props.name}\n        value={modifiedValue}\n        onValueChange={handleValueChange}\n        onBlur={props.handleBlur}\n        placeholder={props.placeholder}\n        rightElement={IconComponent && <IconComponent />}\n        clampValueOnBlur={true}\n        min={0}\n        max={100}\n        minorStepSize={0.5}\n        majorStepSize={10}\n        allowNumericCharactersOnly={false}\n      />\n    </FormGroup>\n  );\n};\n\n// Theme Measures Input Component\ntype ThemeMeasuresInputProps = {\n  name: string,\n  label: string,\n  labelInfo?: string,\n  helperText?: string,\n  placeholder?: string,\n  value: Array<string>,\n  handleChange: HandleChange,\n  error: ?string,\n  warning: ?string,\n};\nconst ThemeMeasuresInput = (props: ThemeMeasuresInputProps) => {\n  // Decide helper text\n  const helperText = props.error || props.warning || props.helperText;\n\n  // Decide intent\n  const intent =\n    (props.error && Intent.DANGER) || (props.warning && Intent.WARNING) || Intent.DEFAULT;\n\n  return (\n    <FormGroup\n      label={props.label}\n      labelInfo={props.labelInfo}\n      helperText={helperText}\n      intent={intent}\n    >\n      <MeasureSelector\n        active={props.value}\n        setActive={newValues =>\n          props.handleChange({\n            target: { name: 'measures', value: newValues },\n          })\n        }\n      />\n    </FormGroup>\n  );\n};\n\n// Switch Input Component\ntype SwitchInputProps = {\n  name: string,\n  label: string,\n  labelInfo?: string,\n  helperText?: string,\n  placeholder?: string,\n  value: boolean,\n  handleChange: HandleChange,\n  handleBlur: HandleBlur,\n  error: ?string,\n  warning: ?string,\n};\nconst SwitchInput = (props: SwitchInputProps) => {\n  // Decide helper text\n  const helperText = props.error || props.warning || props.helperText;\n\n  // Decide intent\n  const intent =\n    (props.error && Intent.DANGER) || (props.warning && Intent.WARNING) || Intent.DEFAULT;\n\n  const handleSwitchChange = () => {\n    props.handleChange({ target: { name: 'dynamic', value: !props.value } });\n  };\n\n  return (\n    <FormGroup\n      label={props.label}\n      labelInfo={props.labelInfo}\n      helperText={helperText}\n      intent={intent}\n    >\n      <Switch\n        intent={intent}\n        name={props.name}\n        checked={props.value}\n        onChange={handleSwitchChange}\n        onBlur={props.handleBlur}\n        placeholder={props.placeholder}\n      />\n    </FormGroup>\n  );\n};\n\n// Equation Input Component\ntype EquationInputProps = {\n  name: string,\n  label: string,\n  labelInfo?: string,\n  helperText?: string,\n  placeholder?: string,\n  value: string,\n  handleChange: HandleChange,\n  handleBlur: HandleBlur,\n  error: ?string,\n  warning: ?string,\n};\nconst EquationInput = (props: EquationInputProps) => {\n  // Decide helper text\n  const helperText = props.error || props.warning || props.helperText;\n\n  // Decide intent\n  const intent =\n    (props.error && Intent.DANGER) || (props.warning && Intent.WARNING) || Intent.DEFAULT;\n\n  return (\n    <FormGroup\n      label={props.label}\n      labelInfo={props.labelInfo}\n      helperText={helperText}\n      intent={intent}\n    >\n      <RUEquationInput\n        intent={intent}\n        name={props.name}\n        value={props.value}\n        onChange={newValue => props.handleChange({ target: { name: props.name, value: newValue } })}\n        onBlur={props.handleBlur}\n        placeholder={props.placeholder}\n      />\n    </FormGroup>\n  );\n};\n\n// Field Renderer\nconst renderField = (validationProps: ValidationProps) => (field: Field) => {\n  const { errors, warnings, values, handleChange, handleBlur } = validationProps;\n  const { id, name, type } = field;\n\n  switch (type) {\n    case 'text':\n      if (typeof values[name] !== 'string') {\n        throw new Error('Value of text input type was not a string');\n      }\n      return (\n        <TextInput\n          key={id}\n          {...field}\n          error={errors[name]}\n          warning={warnings[name]}\n          value={values[name]}\n          handleChange={handleChange}\n          handleBlur={handleBlur}\n        />\n      );\n    case 'textarea':\n      if (typeof values[name] !== 'string') {\n        throw new Error('Value of textarea input type was not a string');\n      }\n      return (\n        <TextAreaInput\n          key={id}\n          {...field}\n          error={errors[name]}\n          warning={warnings[name]}\n          value={values[name]}\n          handleChange={handleChange}\n          handleBlur={handleBlur}\n        />\n      );\n    case 'number':\n      if (typeof values[name] !== 'string' && typeof values[name] !== 'number') {\n        throw new Error('Value of number input type was not a string or number');\n      }\n      return (\n        <NumberInput\n          key={id}\n          {...field}\n          error={errors[name]}\n          warning={warnings[name]}\n          value={values[name]}\n          handleChange={handleChange}\n          handleBlur={handleBlur}\n        />\n      );\n    case 'percentage':\n      if (typeof values[name] !== 'string' && typeof values[name] !== 'number') {\n        throw new Error('Value of percentage input type was not a string or number');\n      }\n      return (\n        <PercentageInput\n          key={id}\n          {...field}\n          error={errors[name]}\n          warning={warnings[name]}\n          value={values[name]}\n          handleChange={handleChange}\n          handleBlur={handleBlur}\n        />\n      );\n    case 'date':\n      if (typeof values[name] !== 'string') {\n        throw new Error('Value of date input type was not a string');\n      }\n      return (\n        <DateInput\n          key={id}\n          {...field}\n          error={errors[name]}\n          warning={warnings[name]}\n          value={values[name]}\n          handleChange={handleChange}\n          handleBlur={handleBlur}\n        />\n      );\n    case 'select':\n      if (typeof values[name] !== 'string') {\n        throw new Error('Value of select input type was not a boolean');\n      }\n      return (\n        <SelectInput\n          key={id}\n          {...field}\n          error={errors[name]}\n          warning={warnings[name]}\n          value={values[name]}\n          handleChange={handleChange}\n          handleBlur={handleBlur}\n        />\n      );\n    case 'switch':\n      if (typeof values[name] !== 'boolean') {\n        throw new Error('Value of switch input type was not a boolean');\n      }\n      return (\n        <SwitchInput\n          key={id}\n          {...field}\n          error={errors[name]}\n          warning={warnings[name]}\n          value={values[name]}\n          handleChange={handleChange}\n          handleBlur={handleBlur}\n        />\n      );\n    case 'equation':\n      if (typeof values[name] !== 'string') {\n        throw new Error('Value of equation input type was not a string');\n      }\n      return (\n        <EquationInput\n          key={id}\n          {...field}\n          error={errors[name]}\n          warning={warnings[name]}\n          value={values[name]}\n          handleChange={handleChange}\n          handleBlur={handleBlur}\n        />\n      );\n    case 'theme-measures':\n      if (!Array.isArray(values[name])) {\n        throw new Error('Value of measures input type was not an array');\n      }\n      return (\n        <ThemeMeasuresInput\n          key={id}\n          {...field}\n          error={errors[name]}\n          warning={warnings[name]}\n          value={values[name]}\n          handleChange={handleChange}\n        />\n      );\n    default:\n      throw new Error('Unrecognised field type when rendering form');\n  }\n};\n\n// Form Presentational Component\nexport default ({ formData, initialValues, model, handleUpdate }: FormProps) => {\n  // Destructure values from form data\n  const { fields, validate, warn } = formData;\n\n  // Use validation hook\n  const validationProps = useFormValidation(initialValues, validate, warn, model, handleUpdate);\n\n  return (\n    <form onSubmit={validationProps.handleSubmit} style={{ width: '700px' }}>\n      {fields.map(renderField(validationProps))}\n      <SubmitButton disabled={validationProps.isSubmitting || !validationProps.touched} />\n    </form>\n  );\n};\n","/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Classes } from \"@blueprintjs/core\";\nvar NS = Classes.getClassNamespace();\nexport var MULTISELECT = NS + \"-multi-select\";\nexport var MULTISELECT_POPOVER = MULTISELECT + \"-popover\";\nexport var OMNIBAR = NS + \"-omnibar\";\nexport var OMNIBAR_OVERLAY = OMNIBAR + \"-overlay\";\nexport var SELECT = NS + \"-select\";\nexport var SELECT_POPOVER = SELECT + \"-popover\";","/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as Classes from \"./classes\";\nexport { Classes };\nexport * from \"./itemListRenderer\";\nexport * from \"./listItemsProps\";\nexport * from \"./listItemsUtils\";","/*!\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * `ItemListRenderer` helper method for rendering each item in `filteredItems`,\n * with optional support for `noResults` (when filtered items is empty)\n * and `initialContent` (when query is empty).\n */\nexport function renderFilteredItems(props, noResults, initialContent) {\n  if (props.query.length === 0 && initialContent !== undefined) {\n    return initialContent;\n  }\n\n  var items = props.filteredItems.map(props.renderItem).filter(function (item) {\n    return item != null;\n  });\n  return items.length > 0 ? items : noResults;\n}","/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Utils } from \"@blueprintjs/core\";\n/**\n * Utility function for executing the {@link IListItemsProps#itemsEqual} prop to test\n * for equality between two items.\n * @return `true` if the two items are equivalent according to `itemsEqualProp`.\n */\n\nexport function executeItemsEqual(itemsEqualProp, itemA, itemB) {\n  // Use strict equality if:\n  // A) Default equality check is necessary because itemsEqualProp is undefined.\n  // OR\n  // B) Either item is null/undefined. Note that null represents \"no item\", while\n  //    undefined represents an uncontrolled prop. This strict equality check ensures\n  //    nothing will ever be considered equivalent to an uncontrolled prop.\n  if (itemsEqualProp === undefined || itemA == null || itemB == null) {\n    return itemA === itemB;\n  }\n\n  if (Utils.isFunction(itemsEqualProp)) {\n    // itemsEqualProp is an equality comparator function, so use it\n    return itemsEqualProp(itemA, itemB);\n  } else {\n    // itemsEqualProp is a property name, so strictly compare the values of the property.\n    return itemA[itemsEqualProp] === itemB[itemsEqualProp];\n  }\n}","/*!\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns an instance of a \"Create Item\" object. */\nexport function getCreateNewItem() {\n  return {\n    __blueprintCreateNewItemBrand: \"blueprint-create-new-item\"\n  };\n}\n/**\n * Type guard returning `true` if the provided item (e.g. the current\n * `activeItem`) is a \"Create Item\" option.\n */\n\nexport function isCreateNewItem(item) {\n  if (item == null) {\n    return false;\n  } // see if the provided item exactly matches the `ICreateNewItem` object,\n  // with no superfluous keys.\n\n\n  var keys = Object.keys(item);\n\n  if (keys.length !== 1 || keys[0] !== \"__blueprintCreateNewItemBrand\") {\n    return false;\n  }\n\n  return item.__blueprintCreateNewItemBrand === \"blueprint-create-new-item\";\n}\n/**\n * Returns the type of the the current active item. This will be a no-op unless\n * the `activeItem` is `undefined` or a \"Create Item\" option, in which case\n * `null` will be returned instead.\n */\n\nexport function getActiveItem(activeItem) {\n  return activeItem == null || isCreateNewItem(activeItem) ? null : activeItem;\n}","/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as tslib_1 from \"tslib\";\nimport * as React from \"react\";\nimport { DISPLAYNAME_PREFIX, Keys, Menu, Utils } from \"@blueprintjs/core\";\nimport { executeItemsEqual, getActiveItem, getCreateNewItem, isCreateNewItem, renderFilteredItems } from \"../../common\";\n\nvar QueryList =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(QueryList, _super);\n\n  function QueryList(props, context) {\n    var _this = _super.call(this, props, context) || this;\n\n    _this.refHandlers = {\n      itemsParent: function itemsParent(ref) {\n        return _this.itemsParentRef = ref;\n      }\n    };\n    /**\n     * Flag indicating that we should check whether selected item is in viewport\n     * after rendering, typically because of keyboard change. Set to `true` when\n     * manipulating state in a way that may cause active item to scroll away.\n     */\n\n    _this.shouldCheckActiveItemInViewport = false;\n    /**\n     * The item that we expect to be the next selected active item (based on click\n     * or key interactions). When scrollToActiveItem = false, used to detect if\n     * an unexpected external change to the active item has been made.\n     */\n\n    _this.expectedNextActiveItem = null;\n    /** default `itemListRenderer` implementation */\n\n    _this.renderItemList = function (listProps) {\n      var _a = _this.props,\n          initialContent = _a.initialContent,\n          noResults = _a.noResults; // omit noResults if createNewItemFromQuery and createNewItemRenderer are both supplied, and query is not empty\n\n      var maybeNoResults = _this.isCreateItemRendered() ? null : noResults;\n      var menuContent = renderFilteredItems(listProps, maybeNoResults, initialContent);\n      var createItemView = _this.isCreateItemRendered() ? _this.renderCreateItemMenuItem(_this.state.query) : null;\n\n      if (menuContent == null && createItemView == null) {\n        return null;\n      }\n\n      return React.createElement(Menu, {\n        ulRef: listProps.itemsParentRef\n      }, menuContent, createItemView);\n    };\n    /** wrapper around `itemRenderer` to inject props */\n\n\n    _this.renderItem = function (item, index) {\n      var _a = _this.state,\n          activeItem = _a.activeItem,\n          query = _a.query;\n      var matchesPredicate = _this.state.filteredItems.indexOf(item) >= 0;\n      var modifiers = {\n        active: executeItemsEqual(_this.props.itemsEqual, getActiveItem(activeItem), item),\n        disabled: isItemDisabled(item, index, _this.props.itemDisabled),\n        matchesPredicate: matchesPredicate\n      };\n      return _this.props.itemRenderer(item, {\n        handleClick: function handleClick(e) {\n          return _this.handleItemSelect(item, e);\n        },\n        index: index,\n        modifiers: modifiers,\n        query: query\n      });\n    };\n\n    _this.renderCreateItemMenuItem = function (query) {\n      var activeItem = _this.state.activeItem;\n\n      var handleClick = function handleClick(evt) {\n        _this.handleItemCreate(query, evt);\n      };\n\n      var isActive = isCreateNewItem(activeItem);\n      return Utils.safeInvoke(_this.props.createNewItemRenderer, query, isActive, handleClick);\n    };\n\n    _this.handleItemCreate = function (query, evt) {\n      // we keep a cached createNewItem in state, but might as well recompute\n      // the result just to be sure it's perfectly in sync with the query.\n      var item = Utils.safeInvoke(_this.props.createNewItemFromQuery, query);\n\n      if (item != null) {\n        Utils.safeInvoke(_this.props.onItemSelect, item, evt);\n\n        _this.setQuery(\"\", true);\n      }\n    };\n\n    _this.handleItemSelect = function (item, event) {\n      _this.setActiveItem(item);\n\n      Utils.safeInvoke(_this.props.onItemSelect, item, event);\n\n      if (_this.props.resetOnSelect) {\n        _this.setQuery(\"\", true);\n      }\n    };\n\n    _this.handlePaste = function (queries) {\n      var _a = _this.props,\n          createNewItemFromQuery = _a.createNewItemFromQuery,\n          onItemsPaste = _a.onItemsPaste;\n      var nextActiveItem;\n      var nextQueries = []; // Find an exising item that exactly matches each pasted value, or\n      // create a new item if possible. Ignore unmatched values if creating\n      // items is disabled.\n\n      var pastedItemsToEmit = [];\n\n      for (var _i = 0, queries_1 = queries; _i < queries_1.length; _i++) {\n        var query = queries_1[_i];\n        var equalItem = getMatchingItem(query, _this.props);\n\n        if (equalItem !== undefined) {\n          nextActiveItem = equalItem;\n          pastedItemsToEmit.push(equalItem);\n        } else if (_this.canCreateItems()) {\n          var newItem = Utils.safeInvoke(createNewItemFromQuery, query);\n\n          if (newItem !== undefined) {\n            pastedItemsToEmit.push(newItem);\n          }\n        } else {\n          nextQueries.push(query);\n        }\n      } // UX nicety: combine all unmatched queries into a single\n      // comma-separated query in the input, so we don't lose any information.\n      // And don't reset the active item; we'll do that ourselves below.\n\n\n      _this.setQuery(nextQueries.join(\", \"), false); // UX nicety: update the active item if we matched with at least one\n      // existing item.\n\n\n      if (nextActiveItem !== undefined) {\n        _this.setActiveItem(nextActiveItem);\n      }\n\n      Utils.safeInvoke(onItemsPaste, pastedItemsToEmit);\n    };\n\n    _this.handleKeyDown = function (event) {\n      var keyCode = event.keyCode;\n\n      if (keyCode === Keys.ARROW_UP || keyCode === Keys.ARROW_DOWN) {\n        event.preventDefault();\n\n        var nextActiveItem = _this.getNextActiveItem(keyCode === Keys.ARROW_UP ? -1 : 1);\n\n        if (nextActiveItem != null) {\n          _this.setActiveItem(nextActiveItem);\n        }\n      }\n\n      Utils.safeInvoke(_this.props.onKeyDown, event);\n    };\n\n    _this.handleKeyUp = function (event) {\n      var onKeyUp = _this.props.onKeyUp;\n      var activeItem = _this.state.activeItem; // using keyup for enter to play nice with Button's keyboard clicking.\n      // if we were to process enter on keydown, then Button would click itself on keyup\n      // and the popvoer would re-open out of our control :(.\n\n      if (event.keyCode === Keys.ENTER) {\n        event.preventDefault();\n\n        if (activeItem == null || isCreateNewItem(activeItem)) {\n          _this.handleItemCreate(_this.state.query, event);\n        } else {\n          _this.handleItemSelect(activeItem, event);\n        }\n      }\n\n      Utils.safeInvoke(onKeyUp, event);\n    };\n\n    _this.handleQueryChange = function (event) {\n      var query = event == null ? \"\" : event.target.value;\n\n      _this.setQuery(query);\n\n      Utils.safeInvoke(_this.props.onQueryChange, query, event);\n    };\n\n    var _a = props.query,\n        query = _a === void 0 ? \"\" : _a;\n    var createNewItem = Utils.safeInvoke(props.createNewItemFromQuery, query);\n    var filteredItems = getFilteredItems(query, props);\n    _this.state = {\n      activeItem: _this.props.activeItem !== undefined ? _this.props.activeItem : getFirstEnabledItem(filteredItems, props.itemDisabled),\n      createNewItem: createNewItem,\n      filteredItems: filteredItems,\n      query: query\n    };\n    return _this;\n  }\n\n  QueryList.ofType = function () {\n    return QueryList;\n  };\n\n  QueryList.prototype.render = function () {\n    var _a = this.props,\n        className = _a.className,\n        items = _a.items,\n        renderer = _a.renderer,\n        _b = _a.itemListRenderer,\n        itemListRenderer = _b === void 0 ? this.renderItemList : _b;\n\n    var _c = this.state,\n        createNewItem = _c.createNewItem,\n        spreadableState = tslib_1.__rest(_c, [\"createNewItem\"]);\n\n    return renderer(tslib_1.__assign({}, spreadableState, {\n      className: className,\n      handleItemSelect: this.handleItemSelect,\n      handleKeyDown: this.handleKeyDown,\n      handleKeyUp: this.handleKeyUp,\n      handlePaste: this.handlePaste,\n      handleQueryChange: this.handleQueryChange,\n      itemList: itemListRenderer(tslib_1.__assign({}, spreadableState, {\n        items: items,\n        itemsParentRef: this.refHandlers.itemsParent,\n        renderItem: this.renderItem\n      }))\n    }));\n  };\n\n  QueryList.prototype.componentWillReceiveProps = function (nextProps) {\n    if (nextProps.activeItem !== undefined) {\n      this.shouldCheckActiveItemInViewport = true;\n      this.setState({\n        activeItem: nextProps.activeItem\n      });\n    }\n\n    if (nextProps.query != null) {\n      this.setQuery(nextProps.query, nextProps.resetOnQuery, nextProps);\n    }\n  };\n\n  QueryList.prototype.componentDidUpdate = function (prevProps) {\n    var _this = this;\n\n    if (!Utils.shallowCompareKeys(this.props, prevProps, {\n      include: [\"items\", \"itemListPredicate\", \"itemPredicate\"]\n    })) {\n      this.setQuery(this.state.query);\n    }\n\n    if (this.shouldCheckActiveItemInViewport) {\n      // update scroll position immediately before repaint so DOM is accurate\n      // (latest filteredItems) and to avoid flicker.\n      requestAnimationFrame(function () {\n        return _this.scrollActiveItemIntoView();\n      }); // reset the flag\n\n      this.shouldCheckActiveItemInViewport = false;\n    }\n  };\n\n  QueryList.prototype.scrollActiveItemIntoView = function () {\n    var scrollToActiveItem = this.props.scrollToActiveItem !== false;\n    var externalChangeToActiveItem = !executeItemsEqual(this.props.itemsEqual, getActiveItem(this.expectedNextActiveItem), getActiveItem(this.props.activeItem));\n    this.expectedNextActiveItem = null;\n\n    if (!scrollToActiveItem && externalChangeToActiveItem) {\n      return;\n    }\n\n    var activeElement = this.getActiveElement();\n\n    if (this.itemsParentRef != null && activeElement != null) {\n      var activeTop = activeElement.offsetTop,\n          activeHeight = activeElement.offsetHeight;\n      var _a = this.itemsParentRef,\n          parentOffsetTop = _a.offsetTop,\n          parentScrollTop = _a.scrollTop,\n          parentHeight = _a.clientHeight; // compute padding on parent element to ensure we always leave space\n\n      var _b = this.getItemsParentPadding(),\n          paddingTop = _b.paddingTop,\n          paddingBottom = _b.paddingBottom; // compute the two edges of the active item for comparison, including parent padding\n\n\n      var activeBottomEdge = activeTop + activeHeight + paddingBottom - parentOffsetTop;\n      var activeTopEdge = activeTop - paddingTop - parentOffsetTop;\n\n      if (activeBottomEdge >= parentScrollTop + parentHeight) {\n        // offscreen bottom: align bottom of item with bottom of viewport\n        this.itemsParentRef.scrollTop = activeBottomEdge + activeHeight - parentHeight;\n      } else if (activeTopEdge <= parentScrollTop) {\n        // offscreen top: align top of item with top of viewport\n        this.itemsParentRef.scrollTop = activeTopEdge - activeHeight;\n      }\n    }\n  };\n\n  QueryList.prototype.setQuery = function (query, resetActiveItem, props) {\n    if (resetActiveItem === void 0) {\n      resetActiveItem = this.props.resetOnQuery;\n    }\n\n    if (props === void 0) {\n      props = this.props;\n    }\n\n    var createNewItemFromQuery = props.createNewItemFromQuery;\n    this.shouldCheckActiveItemInViewport = true;\n    var hasQueryChanged = query !== this.state.query;\n\n    if (hasQueryChanged) {\n      Utils.safeInvoke(props.onQueryChange, query);\n    }\n\n    var filteredItems = getFilteredItems(query, props);\n    var createNewItem = createNewItemFromQuery != null && query !== \"\" ? createNewItemFromQuery(query) : undefined;\n    this.setState({\n      createNewItem: createNewItem,\n      filteredItems: filteredItems,\n      query: query\n    }); // always reset active item if it's now filtered or disabled\n\n    var activeIndex = this.getActiveIndex(filteredItems);\n    var shouldUpdateActiveItem = resetActiveItem || activeIndex < 0 || isItemDisabled(getActiveItem(this.state.activeItem), activeIndex, props.itemDisabled);\n\n    if (hasQueryChanged && shouldUpdateActiveItem) {\n      this.setActiveItem(getFirstEnabledItem(filteredItems, props.itemDisabled));\n    }\n  };\n\n  QueryList.prototype.getActiveElement = function () {\n    var activeItem = this.state.activeItem;\n\n    if (this.itemsParentRef != null) {\n      if (isCreateNewItem(activeItem)) {\n        return this.itemsParentRef.children.item(this.state.filteredItems.length);\n      } else {\n        var activeIndex = this.getActiveIndex();\n        return this.itemsParentRef.children.item(activeIndex);\n      }\n    }\n\n    return undefined;\n  };\n\n  QueryList.prototype.getActiveIndex = function (items) {\n    if (items === void 0) {\n      items = this.state.filteredItems;\n    }\n\n    var activeItem = this.state.activeItem;\n\n    if (activeItem == null || isCreateNewItem(activeItem)) {\n      return -1;\n    } // NOTE: this operation is O(n) so it should be avoided in render(). safe for events though.\n\n\n    for (var i = 0; i < items.length; ++i) {\n      if (executeItemsEqual(this.props.itemsEqual, items[i], activeItem)) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  QueryList.prototype.getItemsParentPadding = function () {\n    // assert ref exists because it was checked before calling\n    var _a = getComputedStyle(this.itemsParentRef),\n        paddingTop = _a.paddingTop,\n        paddingBottom = _a.paddingBottom;\n\n    return {\n      paddingBottom: pxToNumber(paddingBottom),\n      paddingTop: pxToNumber(paddingTop)\n    };\n  };\n  /**\n   * Get the next enabled item, moving in the given direction from the start\n   * index. A `null` return value means no suitable item was found.\n   * @param direction amount to move in each iteration, typically +/-1\n   */\n\n\n  QueryList.prototype.getNextActiveItem = function (direction, startIndex) {\n    if (startIndex === void 0) {\n      startIndex = this.getActiveIndex();\n    }\n\n    if (this.isCreateItemRendered()) {\n      var reachedCreate = startIndex === 0 && direction === -1 || startIndex === this.state.filteredItems.length - 1 && direction === 1;\n\n      if (reachedCreate) {\n        return getCreateNewItem();\n      }\n    }\n\n    return getFirstEnabledItem(this.state.filteredItems, this.props.itemDisabled, direction, startIndex);\n  };\n\n  QueryList.prototype.setActiveItem = function (activeItem) {\n    this.expectedNextActiveItem = activeItem;\n\n    if (this.props.activeItem === undefined) {\n      // indicate that the active item may need to be scrolled into view after update.\n      this.shouldCheckActiveItemInViewport = true;\n      this.setState({\n        activeItem: activeItem\n      });\n    }\n\n    if (isCreateNewItem(activeItem)) {\n      Utils.safeInvoke(this.props.onActiveItemChange, null, true);\n    } else {\n      Utils.safeInvoke(this.props.onActiveItemChange, activeItem, false);\n    }\n  };\n\n  QueryList.prototype.isCreateItemRendered = function () {\n    return this.canCreateItems() && this.state.query !== \"\" && // this check is unfortunately O(N) on the number of items, but\n    // alas, hiding the \"Create Item\" option when it exactly matches an\n    // existing item is much clearer.\n    !this.wouldCreatedItemMatchSomeExistingItem();\n  };\n\n  QueryList.prototype.canCreateItems = function () {\n    return this.props.createNewItemFromQuery != null && this.props.createNewItemRenderer != null;\n  };\n\n  QueryList.prototype.wouldCreatedItemMatchSomeExistingItem = function () {\n    var _this = this; // search only the filtered items, not the full items list, because we\n    // only need to check items that match the current query.\n\n\n    return this.state.filteredItems.some(function (item) {\n      return executeItemsEqual(_this.props.itemsEqual, item, _this.state.createNewItem);\n    });\n  };\n\n  QueryList.displayName = DISPLAYNAME_PREFIX + \".QueryList\";\n  QueryList.defaultProps = {\n    resetOnQuery: true\n  };\n  return QueryList;\n}(React.Component);\n\nexport { QueryList };\n\nfunction pxToNumber(value) {\n  return value == null ? 0 : parseInt(value.slice(0, -2), 10);\n}\n\nfunction getMatchingItem(query, _a) {\n  var items = _a.items,\n      itemPredicate = _a.itemPredicate;\n\n  if (Utils.isFunction(itemPredicate)) {\n    // .find() doesn't exist in ES5. Alternative: use a for loop instead of\n    // .filter() so that we can return as soon as we find the first match.\n    for (var i = 0; i < items.length; i++) {\n      var item = items[i];\n\n      if (itemPredicate(query, item, i, true)) {\n        return item;\n      }\n    }\n  }\n\n  return undefined;\n}\n\nfunction getFilteredItems(query, _a) {\n  var items = _a.items,\n      itemPredicate = _a.itemPredicate,\n      itemListPredicate = _a.itemListPredicate;\n\n  if (Utils.isFunction(itemListPredicate)) {\n    // note that implementations can reorder the items here\n    return itemListPredicate(query, items);\n  } else if (Utils.isFunction(itemPredicate)) {\n    return items.filter(function (item, index) {\n      return itemPredicate(query, item, index);\n    });\n  }\n\n  return items;\n}\n/** Wrap number around min/max values: if it exceeds one bound, return the other. */\n\n\nfunction wrapNumber(value, min, max) {\n  if (value < min) {\n    return max;\n  } else if (value > max) {\n    return min;\n  }\n\n  return value;\n}\n\nfunction isItemDisabled(item, index, itemDisabled) {\n  if (itemDisabled == null || item == null) {\n    return false;\n  } else if (Utils.isFunction(itemDisabled)) {\n    return itemDisabled(item, index);\n  }\n\n  return !!item[itemDisabled];\n}\n/**\n * Get the next enabled item, moving in the given direction from the start\n * index. A `null` return value means no suitable item was found.\n * @param items the list of items\n * @param isItemDisabled callback to determine if a given item is disabled\n * @param direction amount to move in each iteration, typically +/-1\n * @param startIndex which index to begin moving from\n */\n\n\nexport function getFirstEnabledItem(items, itemDisabled, direction, startIndex) {\n  if (direction === void 0) {\n    direction = 1;\n  }\n\n  if (startIndex === void 0) {\n    startIndex = items.length - 1;\n  }\n\n  if (items.length === 0) {\n    return null;\n  } // remember where we started to prevent an infinite loop\n\n\n  var index = startIndex;\n  var maxIndex = items.length - 1;\n\n  do {\n    // find first non-disabled item\n    index = wrapNumber(index + direction, 0, maxIndex);\n\n    if (!isItemDisabled(items[index], index, itemDisabled)) {\n      return items[index];\n    }\n  } while (index !== startIndex);\n\n  return null;\n}","// @flow\nimport Form from './Form';\nexport default Form;\n","// @flow\nimport React from 'react';\n\n// Blueprint Components\nimport { Popover, H5, Text, Button, Classes, Intent } from '@blueprintjs/core';\n\nimport type { ConfirmPopoverProps } from './types';\n\nexport const ConfirmPopover = ({\n  children,\n  title,\n  text,\n  dismissLabel,\n  onClick,\n  confirmLabel,\n  ...props\n}: ConfirmPopoverProps) => {\n  return (\n    <Popover {...props}>\n      {children}\n      <div style={{ padding: 10 }}>\n        <H5>{title}</H5>\n        {Array.isArray(text) ? (\n          text.map((t, index) => <Text key={`confirmation_${index}`}>{t}</Text>)\n        ) : (\n          <Text>{text}</Text>\n        )}\n        <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: 15 }}>\n          <Button className={Classes.POPOVER_DISMISS} style={{ marginRight: 10 }}>\n            {dismissLabel}\n          </Button>\n          <Button intent={Intent.DANGER} className={Classes.POPOVER_DISMISS} onClick={onClick}>\n            {confirmLabel}\n          </Button>\n        </div>\n      </div>\n    </Popover>\n  );\n};\n\nConfirmPopover.defaultProps = {\n  confirmLabel: 'Confirm',\n  dismissLabel: 'Cancel',\n};\n\nexport default ConfirmPopover;\n","import ConfirmPopover from './ConfirmPopover';\n\nexport default ConfirmPopover;\n","// @flow\nimport * as API from '../../model/api';\nimport { type BenefitSensitivity } from '../../model/api/types';\nimport { type State } from '../../reducers/types';\nimport * as CONSTANTS from '../../config/constants';\n\ntype Display =\n  | 'benefitSensitivity'\n  | 'deliverableSensitivity'\n  | 'phaseSensitivity'\n  | 'phaseCostSensitivity'\n  | 'benefitBuildupSensitivity'\n  | 'root';\n\nexport function getInitialValues(\n  state: State,\n  scenarioId: string\n): { id: string, name: string, definition: string } {\n  const found = API.getScenarioById(state.model, scenarioId);\n  return {\n    id: found.id,\n    name: found.name,\n    definition: found.definition,\n  };\n}\n\nexport function getCertaintyDisplay(state: State): Display | void {\n  const { selected } = state.certainty.explorer;\n  if (selected) {\n    switch (selected.type.id) {\n      case CONSTANTS.SCENARIO_ID:\n        return 'root';\n      case CONSTANTS.PHASE_SENSITIVITY_ID:\n        return 'phaseSensitivity';\n      case CONSTANTS.BENEFIT_SENSITIVITY_ID:\n        return 'benefitSensitivity';\n      case CONSTANTS.DELIVERABLE_SENSITIVITY_ID:\n        return 'deliverableSensitivity';\n      case CONSTANTS.PHASE_COST_SENSITIVITY_ID:\n        return 'phaseCostSensitivity';\n      case CONSTANTS.BENEFIT_BUILDUP_SENSITIVITY_ID:\n        return 'benefitBuildupSensitivity';\n      default:\n        throw new Error(\n          'Tried to get certainty display, something was selected, but type was not recognised'\n        );\n    }\n  }\n  return undefined;\n}\n\nexport function getSelectedScenarioId(state: State): ?string {\n  const { selected } = state.certainty.explorer;\n  if (selected) {\n    return selected.scenarioId;\n  } else {\n    return undefined;\n  }\n}\n\nexport function getMatrixValues(\n  state: State,\n  scenarioId: string,\n  matrix: 'phaseCostSensitivity' | 'benefitBuildupSensitivity'\n): { [string]: { [string]: number } } {\n  const scenarios = API.getScenarios(state.model);\n  const foundScenario = scenarios.find(scenario => scenario.id === scenarioId);\n  if (!foundScenario) {\n    throw new Error(`Could not find scenario with id ${scenarioId} when rendering ${matrix}`);\n  }\n  return foundScenario[matrix];\n}\n\nexport function getBenefitSensitivityValues(state: State, scenarioId: string) {\n  const { benefitSensitivity } = API.getScenarioById(state.model, scenarioId);\n\n  const sensitivity: BenefitSensitivity = benefitSensitivity.map(entry => {\n    return {\n      ...entry,\n      sensitivity: entry.sensitivity * 100,\n    };\n  });\n\n  return sensitivity;\n}\n","// @flow\nimport * as CONSTANTS from '../../../config/constants';\nimport type { Breadcrumbs } from '../types';\nimport type { State } from '../../../reducers/types';\n\n/**\n * Creates breadcrumbs for the certainty analysis screen state.\n * @param  {State} state state tree\n * @return {Breadcrumbs}        breadcrumbs\n */\nexport function getBreadcrumbsData(state: State): Breadcrumbs {\n  // Extract the selected element\n  const { selected } = state.certainty.explorer;\n  const { model } = state;\n  const programme = model.programmes[0];\n  const { scenarios } = state.model.programmes[0];\n\n  const modelBreadcrumb = {\n    icon: CONSTANTS.MODEL_ICON,\n    text: model.name,\n  };\n\n  const programmeBreadcrumb = {\n    icon: CONSTANTS.MODEL_ICON,\n    text: programme.name,\n  };\n\n  const scenariosBreadcrumb = {\n    icon: CONSTANTS.SCENARIO_ICON,\n    text: 'Scenarios',\n  };\n\n  if (selected) {\n    if (selected.type.id === CONSTANTS.SCENARIO_ID) {\n      const scenarioBreadcrumb = {\n        icon: selected.type.icon,\n        text: selected.label,\n      };\n      return [modelBreadcrumb, programmeBreadcrumb, scenariosBreadcrumb, scenarioBreadcrumb];\n    } else {\n      // Try to find parent scenario\n      const found = scenarios.find(s => selected.scenarioId === s.id);\n\n      // If no scenario found then return error\n      if (!found) {\n        throw new Error('Could not find parent scenario when constructing breadcrumbs');\n      }\n\n      const scenarioBreadcrumb = {\n        icon: CONSTANTS.SCENARIO_ICON,\n        text: found.name,\n      };\n      const childBreadcrumb = {\n        icon: selected.type.icon,\n        text: selected.label,\n      };\n      return [\n        modelBreadcrumb,\n        programmeBreadcrumb,\n        scenariosBreadcrumb,\n        scenarioBreadcrumb,\n        childBreadcrumb,\n      ];\n    }\n  }\n\n  // If nothing selected then render no breadcrumbs\n  return [];\n}\n","// @flow\nimport React from 'react';\nimport type { Node } from 'react';\nimport { connect } from 'react-redux';\nimport * as selectors from './selectors';\n\nimport { Breadcrumbs } from '@blueprintjs/core';\n\nimport type { Breadcrumbs as BreadcrumbsType } from '../types';\n\nimport type { State } from '../../../reducers/types';\n\nexport type CertaintyBreadcrumbsProps = {\n  breadcrumbs: Array<BreadcrumbsType>,\n};\n\nconst CertaintyBreadcrumbs = ({ breadcrumbs }: CertaintyBreadcrumbsProps): Node => (\n  <div style={{ width: '100%' }}>\n    <Breadcrumbs items={breadcrumbs} />\n  </div>\n);\n\nconst mapStateToProps = (state: State) => ({\n  breadcrumbs: selectors.getBreadcrumbsData(state),\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(CertaintyBreadcrumbs);\n","export const certaintyHeaderContainer = (dark: boolean) => ({\n  position: 'absolute',\n  padding: '10px 10px 0 10px',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n  width: 'calc(100% - 12px)',\n  borderBottomStyle: 'solid',\n  borderBottomWidth: '1px',\n  borderBottomColor: '#00000030',\n  backgroundColor: dark ? 'rgb(48, 64, 77)' : 'white',\n});\n\nexport const toolbarContainer = {\n  margin: '10px 0',\n  minHeight: '24px', // height of button\n};\n","// @flow\nimport React from 'react';\nimport type { Node } from 'react';\n\n// Connect function\nimport { connect } from 'react-redux';\n\n// Blueprint Components\nimport { Button, ButtonGroup, Intent } from '@blueprintjs/core';\n\n// Reusable Components\nimport ConfirmPopover from '../../../components/ConfirmPopover';\n\n// Selectors\nimport { getCertaintyDisplay } from '../selectors';\n\n// Styles\nimport { toolbarContainer } from './styles';\n\n// Flow Types\nimport type { ToolbarProps } from '../types';\n\nconst ResetButton = ({ display, handleReset }) => {\n  let title, text, button;\n  switch (display) {\n    case 'phaseSensitivity':\n      title = 'Reset Phase Values to Model Values';\n      text = 'This will reset all the phase values to those defined in the main model.';\n      button = 'Reset Phases to Model Values';\n      break;\n    case 'benefitBuildupSensitivity':\n    case 'phaseCostSensitivity':\n      title = 'Reset Sensitivity Values to Zero';\n      text = 'This will reset all the sensitivity values in the matrix to zero.';\n      button = 'Reset to Zero';\n      break;\n    case 'benefitSensitivity':\n      title = 'Reset Sensitivity Values to Zero';\n      text = 'This will reset all benefit sensitivity values to zero.';\n      button = 'Reset to Zero';\n      break;\n    case 'root':\n      title = 'Reset ALL Scenario Values to Model Values';\n      text = 'This will reset the whole scenario back to that defined in the model';\n      button = 'Reset Scenario';\n      break;\n    default:\n      throw new Error('Tried to render a reset button on a non-resetable scenario type');\n  }\n  return (\n    <ButtonGroup style={{ float: 'right' }}>\n      <ConfirmPopover title={title} text={text} onClick={handleReset}>\n        <Button small intent={Intent.DANGER}>\n          {button}\n        </Button>\n      </ConfirmPopover>\n    </ButtonGroup>\n  );\n};\n\nconst Toolbar = ({ handleReset, display }: ToolbarProps): Node => (\n  <div style={toolbarContainer}>\n    {display === 'root' && (\n      <ButtonGroup>\n        <Button small icon=\"duplicate\">\n          Duplicate Scenario\n        </Button>\n        <ConfirmPopover\n          title=\"Delete Scenario?\"\n          text=\"This will remove the entire scenario from the model?\"\n        >\n          <Button small icon=\"trash\" intent={Intent.DANGER}>\n            Delete Scenario\n          </Button>\n        </ConfirmPopover>\n      </ButtonGroup>\n    )}\n    {['benefitSensitivity', 'deliverableSensitivity', 'phaseSensitivity'].includes(display) && (\n      <ButtonGroup>\n        <Button small>Select All</Button>\n        <Button small>Deselect All</Button>\n      </ButtonGroup>\n    )}\n    {[\n      'phaseSensitivity',\n      'phaseCostSensitivity',\n      'benefitBuildupSensitivity',\n      'benefitSensitivity',\n      'root',\n    ].includes(display) && <ResetButton display={display} handleReset={handleReset} />}\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  display: getCertaintyDisplay(state),\n});\n\nconst mapDispatchToProps = state => ({\n  handleReset: () => console.log('reset values'),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Toolbar);\n","// @flow\nimport React from 'react';\n\nimport Breadcrumbs from './Breadcrumbs';\nimport Toolbar from './Toolbar';\n\nimport { certaintyHeaderContainer } from './styles';\n\nexport default ({ dark }: { dark: boolean }) => (\n  <div style={certaintyHeaderContainer(dark)}>\n    <Breadcrumbs />\n    <Toolbar />\n  </div>\n);\n","// @flow\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport { SCENARIO_FORM, SCENARIO_KEY } from '../../config/constants';\n\nimport { type Dispatch } from '../../actions/types';\nimport { updateAtom } from '../../actions/model';\nimport { getInitialValues } from './selectors';\n\nimport Form from '../../components/Form';\n\nimport { type State } from '../../reducers/types';\n\nconst mapStateToProps = (state: State, ownProps: { scenarioId: string }) => ({\n  formData: SCENARIO_FORM,\n  initialValues: getInitialValues(state, ownProps.scenarioId),\n  model: state.model,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch, ownProps: { scenarioId: string }) => ({\n  handleUpdate: values => dispatch(updateAtom(ownProps.scenarioId, SCENARIO_KEY, values)),\n});\n\nconst ConnectedForm = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Form);\n\nexport default ({ scenarioId }: { scenarioId: string }) => (\n  <ConnectedForm scenarioId={scenarioId} />\n);\n","// @flow\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport { updateSensitivity } from '../../actions/model';\n\nimport * as API from '../../model/api';\n\nimport { H5, Switch, NumericInput, FormGroup, Tag, Card } from '@blueprintjs/core';\n\nimport { SubmitButton } from '../../components/Form/Form';\n\nimport { type Benefit } from '../../model/api/types';\n\nimport { type State } from '../../reducers/types';\nimport { type Dispatch } from '../../actions/types';\nimport { BENEFIT_TYPE_FINANCIAL } from '../../config/constants';\nimport { getBenefitSensitivityValues } from './selectors';\n\ntype CurrentValues = Array<{ id: string, switch: boolean, sensitivity: string | number }>;\n\ntype BenefitSensitivityProps = {\n  scenarioId: string,\n  benefits: Array<Benefit>,\n  benefitSensitivity: CurrentValues,\n  handleSave: (values: CurrentValues) => void,\n  width: string | number,\n};\n\ntype SensitivityInputProps = {\n  label: string,\n  labelInfo?: string,\n  helperText?: string,\n  handleChange: (value: number | string) => void,\n  value: number | string,\n};\n\ntype SwitchInputProps = {\n  label: string,\n  labelInfo?: string,\n  handleChange: () => void,\n  value: boolean,\n};\n\ntype BenefitSensitivityItemProps = {\n  benefit: Benefit,\n  switchState: boolean,\n  sensitivity: string | number,\n  handleSwitchChange: () => void,\n  handleSensitivityChange: (value: number | string) => void,\n  width: string | number,\n};\n\nconst SensitivityInput = ({\n  label,\n  labelInfo,\n  helperText,\n  handleChange,\n  value,\n}: SensitivityInputProps) => {\n  // Create custom handle for blueprint component\n  const handleValueChange = (num, str) => {\n    if (Number.isNaN(num) || str[str.length - 1] === '.') {\n      handleChange(str);\n    } else {\n      handleChange(num);\n    }\n  };\n\n  return (\n    <FormGroup label={label} labelInfo={labelInfo} helperText={helperText}>\n      <NumericInput\n        allowNumericCharactersOnly={false}\n        clampValueOnBlur\n        max={200}\n        min={-200}\n        onValueChange={handleValueChange}\n        rightElement={<Tag icon=\"percentage\" />}\n        value={value}\n      />\n    </FormGroup>\n  );\n};\n\nexport const SwitchInput = ({ label, labelInfo, value, handleChange }: SwitchInputProps) => (\n  <FormGroup label={label} labelInfo={labelInfo} inline>\n    <Switch checked={value} onChange={handleChange} />\n  </FormGroup>\n);\n\nconst handleSwitchChange = (\n  targetId: string,\n  currentValues: CurrentValues,\n  setCurrentValues: (values: CurrentValues) => void\n) => () => {\n  const filteredValues = currentValues.filter(sensitivity => sensitivity.id !== targetId);\n  const foundValue = currentValues.find(sensitivity => sensitivity.id === targetId);\n\n  if (!foundValue) {\n    throw new Error(`Could not find sensitivity value for benefit id ${targetId}`);\n  }\n\n  const newValues = [...filteredValues, { ...foundValue, switch: !foundValue.switch }];\n  setCurrentValues(newValues);\n};\n\nconst handleSensitivityChange = (\n  targetId: string,\n  currentValues: CurrentValues,\n  setCurrentValues: (values: CurrentValues) => void\n) => (value: string | number) => {\n  const filteredValues = currentValues.filter(sensitivity => sensitivity.id !== targetId);\n  const foundValue = currentValues.find(sensitivity => sensitivity.id === targetId);\n  const newValues = [...filteredValues, { ...foundValue, sensitivity: value }];\n  setCurrentValues(newValues);\n};\n\nconst BenefitSensitivityItem = ({\n  benefit,\n  switchState,\n  sensitivity,\n  handleSwitchChange,\n  handleSensitivityChange,\n  width,\n}: BenefitSensitivityItemProps) => {\n  const title = `${benefit.name} (${\n    benefit.type === BENEFIT_TYPE_FINANCIAL ? 'Financial' : 'Non-Financial'\n  })`;\n  return (\n    <Card style={{ marginBottom: '10px', marginRight: '10px', width }}>\n      <H5>{title}</H5>\n      <SwitchInput\n        label=\"Switch\"\n        labelInfo=\"(required)\"\n        handleChange={handleSwitchChange}\n        value={switchState}\n      />\n      <SensitivityInput\n        label=\"Sensitivity\"\n        labelInfo=\"(required)\"\n        helperText=\"Percentage increase/decrease applied to benefit\"\n        handleChange={handleSensitivityChange}\n        value={sensitivity}\n      />\n    </Card>\n  );\n};\n\nconst renderBenefitSensitivityItem = (\n  currentValues: CurrentValues,\n  setCurrentValues: (values: CurrentValues) => void,\n  width: string | number\n) => benefit => {\n  const foundSensitivity = currentValues.find(sensitivity => sensitivity.id === benefit.id);\n  if (!foundSensitivity) {\n    throw new Error(`Could not find benefit sensitivity with id ${benefit.id}`);\n  }\n\n  const { switch: switchState, sensitivity } = foundSensitivity;\n\n  const handleSwitchCallback = handleSwitchChange(benefit.id, currentValues, setCurrentValues);\n  const handleSensitivityCallback = handleSensitivityChange(\n    benefit.id,\n    currentValues,\n    setCurrentValues\n  );\n\n  return (\n    <BenefitSensitivityItem\n      key={`BENEFIT_SENSITIVITY_ITEM_${benefit.id}`}\n      benefit={benefit}\n      switchState={switchState}\n      sensitivity={sensitivity}\n      handleSwitchChange={handleSwitchCallback}\n      handleSensitivityChange={handleSensitivityCallback}\n      width={width}\n    />\n  );\n};\n\nconst BenefitSensitivity = ({\n  benefits,\n  benefitSensitivity,\n  handleSave,\n  width,\n}: BenefitSensitivityProps) => {\n  const [currentValues, setCurrentValues] = React.useState(benefitSensitivity);\n\n  return (\n    <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n      {benefits.map(renderBenefitSensitivityItem(currentValues, setCurrentValues, width))}\n      <SubmitButton onClick={() => handleSave(currentValues)} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: State, ownProps: { scenarioId: string }) => ({\n  benefits: API.getBenefits(state.model),\n  benefitSensitivity: getBenefitSensitivityValues(state, ownProps.scenarioId),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch, ownProps: { scenarioId: string }) => ({\n  handleSave: values =>\n    dispatch(\n      updateSensitivity(\n        ownProps.scenarioId,\n        'benefitSensitivity',\n        values.map(value => ({\n          ...value,\n          sensitivity: value.sensitivity / 100,\n        }))\n      )\n    ),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BenefitSensitivity);\n","// @flow\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport { updateSensitivity } from '../../actions/model';\n\nimport * as API from '../../model/api';\n\nimport { H5, Card } from '@blueprintjs/core';\n\nimport { SubmitButton } from '../../components/Form/Form';\n\nimport { type Deliverable } from '../../model/api/types';\n\nimport { type State } from '../../reducers/types';\nimport { type Dispatch } from '../../actions/types';\n\n// TODO: Extract to own component\nimport { SwitchInput } from './BenefitSensitivity';\n\ntype CurrentValues = Array<{ id: string, switch: boolean }>;\n\ntype DeliverableSensitivityProps = {\n  scenarioId: string,\n  deliverables: Array<Deliverable>,\n  deliverableSensitivity: CurrentValues,\n  handleSave: (values: CurrentValues) => void,\n  width: string | number,\n};\n\ntype DeliverableSensitivityItemProps = {\n  deliverable: Deliverable,\n  switchState: boolean,\n  handleSwitchChange: () => void,\n  width: string | number,\n};\n\nconst handleSwitchChange = (\n  targetId: string,\n  currentValues: CurrentValues,\n  setCurrentValues: (values: CurrentValues) => void\n) => () => {\n  const filteredValues = currentValues.filter(sensitivity => sensitivity.id !== targetId);\n  const foundValue = currentValues.find(sensitivity => sensitivity.id === targetId);\n\n  if (!foundValue) {\n    throw new Error(`Could not find sensitivity value for deliverable id ${targetId}`);\n  }\n\n  const newValues = [...filteredValues, { ...foundValue, switch: !foundValue.switch }];\n  setCurrentValues(newValues);\n};\n\nconst DeliverableSensitivityItem = ({\n  deliverable,\n  switchState,\n  handleSwitchChange,\n  width,\n}: DeliverableSensitivityItemProps) => {\n  const title = deliverable.name;\n  return (\n    <Card style={{ marginBottom: '10px', marginRight: '10px', width }}>\n      <H5>{title}</H5>\n      <SwitchInput\n        label=\"Switch\"\n        labelInfo=\"(required)\"\n        handleChange={handleSwitchChange}\n        value={switchState}\n      />\n    </Card>\n  );\n};\n\nconst renderDeliverableSensitivityItem = (\n  currentValues: CurrentValues,\n  setCurrentValues: (values: CurrentValues) => void,\n  width: string | number\n) => deliverable => {\n  const foundSensitivity = currentValues.find(sensitivity => sensitivity.id === deliverable.id);\n  if (!foundSensitivity) {\n    throw new Error(`Could not find deliverable sensitivity with id ${deliverable.id}`);\n  }\n\n  const { switch: switchState } = foundSensitivity;\n\n  const handleSwitchCallback = handleSwitchChange(deliverable.id, currentValues, setCurrentValues);\n\n  return (\n    <DeliverableSensitivityItem\n      key={`DELIVERABLE_SENSITIVITY_ITEM_${deliverable.id}`}\n      deliverable={deliverable}\n      switchState={switchState}\n      handleSwitchChange={handleSwitchCallback}\n      width={width}\n    />\n  );\n};\n\nconst DeliverableSensitivity = ({\n  deliverables,\n  deliverableSensitivity,\n  handleSave,\n  width,\n}: DeliverableSensitivityProps) => {\n  const [currentValues, setCurrentValues] = React.useState(deliverableSensitivity);\n\n  return (\n    <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n      {deliverables.map(renderDeliverableSensitivityItem(currentValues, setCurrentValues, width))}\n      <SubmitButton onClick={() => handleSave(currentValues)} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: State, ownProps: { scenarioId: string }) => ({\n  deliverables: API.getDeliverables(state.model),\n  deliverableSensitivity: API.getScenarioById(state.model, ownProps.scenarioId)\n    .deliverableSensitivity,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch, ownProps: { scenarioId: string }) => ({\n  handleSave: values =>\n    dispatch(updateSensitivity(ownProps.scenarioId, 'deliverableSensitivity', values)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DeliverableSensitivity);\n","// @flow\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport moment from 'moment';\n\nimport { updateSensitivity } from '../../actions/model';\n\nimport * as API from '../../model/api';\n\nimport { H5, NumericInput, FormGroup, Card } from '@blueprintjs/core';\nimport { DateInput } from '@blueprintjs/datetime';\n\nimport { SubmitButton } from '../../components/Form/Form';\nimport { SwitchInput } from './BenefitSensitivity';\n\nimport { type Phase } from '../../model/api/types';\n\nimport { type State } from '../../reducers/types';\nimport { type Dispatch } from '../../actions/types';\nimport { PHASE_SLIP_RULE_FIXED, DATE_FORMAT } from '../../config/constants';\n\ntype CurrentValues = Array<{\n  id: string,\n  switch: boolean,\n  duration: string | number,\n  start: string,\n}>;\n\ntype PhaseSensitivityProps = {\n  scenarioId: string,\n  phases: Array<Phase>,\n  phaseSensitivity: CurrentValues,\n  handleSave: (values: CurrentValues) => void,\n  width: string | number,\n};\n\ntype DurationInputProps = {\n  label: string,\n  labelInfo?: string,\n  helperText?: string,\n  handleChange: (value: number | string) => void,\n  value: number | string,\n};\n\ntype StartDateInputProps = {\n  label: string,\n  labelInfo?: string,\n  helperText?: string,\n  handleChange: (value: string) => void,\n  value: string,\n};\n\ntype PhaseSensitivityItemProps = {\n  phase: Phase,\n  switchState: boolean,\n  duration: string | number,\n  start: string,\n  handleSwitchChange: () => void,\n  handleDurationChange: (value: number | string) => void,\n  handleStartChange: (value: string) => void,\n  width: string | number,\n};\n\nconst DurationInput = ({\n  label,\n  labelInfo,\n  helperText,\n  handleChange,\n  value,\n}: DurationInputProps) => {\n  // Create custom handle for blueprint component\n  const handleValueChange = (num, str) => {\n    if (Number.isNaN(num) || str[str.length - 1] === '.') {\n      handleChange(str);\n    } else {\n      handleChange(num);\n    }\n  };\n\n  return (\n    <FormGroup label={label} labelInfo={labelInfo} helperText={helperText}>\n      <NumericInput\n        allowNumericCharactersOnly={false}\n        clampValueOnBlur\n        min={0}\n        onValueChange={handleValueChange}\n        value={value}\n      />\n    </FormGroup>\n  );\n};\n\nconst StartDateInput = ({\n  label,\n  labelInfo,\n  helperText,\n  value,\n  handleChange,\n}: StartDateInputProps) => {\n  // Parse date as JS date object\n  const dateValue = moment(value, DATE_FORMAT, true).toDate();\n\n  // Create custom handle for blueprint date component\n  const handleDateChange = (selectedDate: Date, userChange: boolean) => {\n    if (userChange) {\n      handleChange(moment(selectedDate).format(DATE_FORMAT));\n    }\n  };\n  return (\n    <FormGroup label={label} labelInfo={labelInfo} helperText={helperText}>\n      <DateInput\n        value={dateValue}\n        onChange={handleDateChange}\n        parseDate={dateStr => moment(dateStr, DATE_FORMAT, true).toDate()}\n        formatDate={dateObj => moment(dateObj).format(DATE_FORMAT)}\n        maxDate={moment('2040-12-31', DATE_FORMAT, true).toDate()}\n        canClearSelection={false}\n      />\n    </FormGroup>\n  );\n};\n\nconst handleSwitchChange = (\n  targetId: string,\n  currentValues: CurrentValues,\n  setCurrentValues: (values: CurrentValues) => void\n) => () => {\n  const filteredValues = currentValues.filter(sensitivity => sensitivity.id !== targetId);\n  const foundValue = currentValues.find(sensitivity => sensitivity.id === targetId);\n\n  if (!foundValue) {\n    throw new Error(`Could not find sensitivity value for phase id ${targetId}`);\n  }\n\n  const newValues = [...filteredValues, { ...foundValue, switch: !foundValue.switch }];\n  setCurrentValues(newValues);\n};\n\nconst handleDurationChange = (\n  targetId: string,\n  currentValues: CurrentValues,\n  setCurrentValues: (values: CurrentValues) => void\n) => (value: string | number) => {\n  const filteredValues = currentValues.filter(sensitivity => sensitivity.id !== targetId);\n  const foundValue = currentValues.find(sensitivity => sensitivity.id === targetId);\n  const newValues = [...filteredValues, { ...foundValue, duration: value }];\n  setCurrentValues(newValues);\n};\n\nconst handleStartDateChange = (\n  targetId: string,\n  currentValues: CurrentValues,\n  setCurrentValues: (values: CurrentValues) => void\n) => (value: string) => {\n  const filteredValues = currentValues.filter(sensitivity => sensitivity.id !== targetId);\n  const foundValue = currentValues.find(sensitivity => sensitivity.id === targetId);\n  const newValues = [...filteredValues, { ...foundValue, start: value }];\n  setCurrentValues(newValues);\n};\n\nconst PhaseSensitivityItem = ({\n  phase,\n  switchState,\n  duration,\n  start,\n  handleSwitchChange,\n  handleDurationChange,\n  handleStartChange,\n  width,\n}: PhaseSensitivityItemProps) => {\n  const title = `${phase.name} (${\n    phase.slip === PHASE_SLIP_RULE_FIXED ? 'Fixed Cost' : 'Time and Materials'\n  })`;\n  return (\n    <Card style={{ marginBottom: '10px', marginRight: '10px', width }}>\n      <H5>{title}</H5>\n      <SwitchInput\n        label=\"Switch\"\n        labelInfo=\"(required)\"\n        handleChange={handleSwitchChange}\n        value={switchState}\n      />\n      <DurationInput\n        label=\"Duration\"\n        labelInfo=\"(required)\"\n        helperText=\"Duration of the phase (for this scenario) in weeks\"\n        handleChange={handleDurationChange}\n        value={duration}\n      />\n      <StartDateInput\n        label=\"Start Date\"\n        labelInfo=\"(required)\"\n        helperText=\"Start date of the phase\"\n        handleChange={handleStartChange}\n        value={start}\n      />\n    </Card>\n  );\n};\n\nconst renderPhaseSensitivityItem = (\n  currentValues: CurrentValues,\n  setCurrentValues: (values: CurrentValues) => void,\n  width: string | number\n) => phase => {\n  const foundSensitivity = currentValues.find(sensitivity => sensitivity.id === phase.id);\n  if (!foundSensitivity) {\n    throw new Error(`Could not find phase sensitivity with id ${phase.id}`);\n  }\n\n  const { switch: switchState, duration, start } = foundSensitivity;\n\n  const handleSwitchCallback = handleSwitchChange(phase.id, currentValues, setCurrentValues);\n  const handleDurationCallback = handleDurationChange(phase.id, currentValues, setCurrentValues);\n  const handleStartCallback = handleStartDateChange(phase.id, currentValues, setCurrentValues);\n\n  return (\n    <PhaseSensitivityItem\n      key={`PHASE_SENSITIVITY_ITEM_${phase.id}`}\n      phase={phase}\n      switchState={switchState}\n      duration={duration}\n      start={start}\n      handleSwitchChange={handleSwitchCallback}\n      handleDurationChange={handleDurationCallback}\n      handleStartChange={handleStartCallback}\n      width={width}\n    />\n  );\n};\n\nconst PhaseSensitivity = ({\n  phases,\n  phaseSensitivity,\n  handleSave,\n  width,\n}: PhaseSensitivityProps) => {\n  const [currentValues, setCurrentValues] = React.useState(phaseSensitivity);\n\n  return (\n    <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n      {phases.map(renderPhaseSensitivityItem(currentValues, setCurrentValues, width))}\n      <SubmitButton onClick={() => handleSave(currentValues)} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: State, ownProps: { scenarioId: string }) => ({\n  phases: API.getPhases(state.model),\n  phaseSensitivity: API.getScenarioById(state.model, ownProps.scenarioId).phaseSensitivity,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch, ownProps: { scenarioId: string }) => ({\n  handleSave: values =>\n    dispatch(updateSensitivity(ownProps.scenarioId, 'phaseSensitivity', values)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PhaseSensitivity);\n","// @flow\nimport { connect } from 'react-redux';\n\nimport { getMatrixValues } from './selectors';\n\n// Model API\nimport * as API from '../../model/api';\n\n// Reusable Components\nimport Matrix from '../../components/InputComponents/Matrix';\nimport { updateSensitivity } from '../../actions/model';\n\nconst mapStateToProps = (state, ownProps: { scenarioId: string }) => ({\n  x: API.getBenefits(state.model),\n  y: API.getPhases(state.model),\n  values: getMatrixValues(state, ownProps.scenarioId, 'benefitBuildupSensitivity'),\n  typeKey: 'benefitBuildupSensitivity',\n});\n\nconst mapDispatchToProps = (dispatch, ownProps: { scenarioId: string }) => ({\n  handleSubmit: (typeKey, values) =>\n    dispatch(updateSensitivity(ownProps.scenarioId, 'benefitBuildupSensitivity', values)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Matrix);\n","// @flow\nimport { connect } from 'react-redux';\n\nimport { getMatrixValues } from './selectors';\n\n// Model API\nimport * as API from '../../model/api';\n\n// Reusable Components\nimport Matrix from '../../components/InputComponents/Matrix';\nimport { updateSensitivity } from '../../actions/model';\n\nconst mapStateToProps = (state, ownProps: { scenarioId: string }) => ({\n  x: [{ id: 'DEVELOPMENT_COST', name: 'Development' }, { id: 'SUPPORT_COST', name: 'Support' }],\n  y: API.getPhases(state.model),\n  values: getMatrixValues(state, ownProps.scenarioId, 'phaseCostSensitivity'),\n  typeKey: 'phaseCostSensitivity',\n});\n\nconst mapDispatchToProps = (dispatch, ownProps: { scenarioId: string }) => ({\n  handleSubmit: (typeKey, values) =>\n    dispatch(updateSensitivity(ownProps.scenarioId, 'phaseCostSensitivity', values)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Matrix);\n","// @flow\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport { getSelectedScenarioId, getCertaintyDisplay } from './selectors';\n\nimport Header from './Header';\nimport ScenarioForm from './ScenarioForm';\nimport BenefitSensitivity from './BenefitSensitivity';\nimport DeliverableSensitivity from './DeliverableSensitivity';\nimport PhaseSensitivity from './PhaseSensitivity';\nimport BenefitBuildupSensitivity from './BenefitBuildupSensitivity';\nimport PhaseCostSensitivity from './PhaseCostSensitivity';\n\nimport type { InterfaceProps } from './types';\nimport type { State } from '../../reducers/types';\n\nconst renderInput = (display: ?string, scenarioId: ?string) => {\n  switch (display) {\n    case 'root':\n      if (typeof scenarioId !== 'string') {\n        throw new Error('Received non-string scenario id when rendering certainty interface');\n      }\n      return (\n        <div style={{ position: 'relative', top: '85px', padding: '10px' }}>\n          <ScenarioForm scenarioId={scenarioId} />\n        </div>\n      );\n    case 'benefitBuildupSensitivity':\n      if (typeof scenarioId !== 'string') {\n        throw new Error('Received non-string scenario id when rendering certainty interface');\n      }\n      return (\n        <div style={{ position: 'relative', top: '85px', padding: '10px' }}>\n          <BenefitBuildupSensitivity scenarioId={scenarioId} />\n        </div>\n      );\n    case 'phaseCostSensitivity':\n      if (typeof scenarioId !== 'string') {\n        throw new Error('Received non-string scenario id when rendering certainty interface');\n      }\n      return (\n        <div style={{ position: 'relative', top: '85px', padding: '10px' }}>\n          <PhaseCostSensitivity scenarioId={scenarioId} />\n        </div>\n      );\n    case 'benefitSensitivity':\n      if (typeof scenarioId !== 'string') {\n        throw new Error('Received non-string scenario id when rendering certainty interface');\n      }\n      return (\n        <div style={{ position: 'relative', top: '85px', padding: '10px' }}>\n          <BenefitSensitivity scenarioId={scenarioId} width=\"350px\" />\n        </div>\n      );\n    case 'deliverableSensitivity':\n      if (typeof scenarioId !== 'string') {\n        throw new Error('Received non-string scenario id when rendering certainty interface');\n      }\n      return (\n        <div style={{ position: 'relative', top: '85px', padding: '10px' }}>\n          <DeliverableSensitivity scenarioId={scenarioId} width=\"250px\" />\n        </div>\n      );\n    case 'phaseSensitivity':\n      if (typeof scenarioId !== 'string') {\n        throw new Error('Received non-string scenario id when rendering certainty interface');\n      }\n      return (\n        <div style={{ position: 'relative', top: '85px', padding: '10px' }}>\n          <PhaseSensitivity scenarioId={scenarioId} width=\"350px\" />\n        </div>\n      );\n    default:\n      return <div />;\n  }\n};\n\nconst CertaintyEditor = ({ dark, scenarioId, display }: InterfaceProps) => (\n  <div>\n    <Header dark={dark} />\n    {renderInput(display, scenarioId)}\n  </div>\n);\n\nconst mapStateToProps = (state: State) => ({\n  dark: state.editor.dark,\n  scenarioId: getSelectedScenarioId(state),\n  display: getCertaintyDisplay(state),\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(CertaintyEditor);\n"],"sourceRoot":""}