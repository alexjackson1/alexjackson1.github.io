{"version":3,"sources":["components/ScenarioSelector/index.js","tiles/GanttChart/selectors.js","tiles/GanttChart/Gantt.js","tiles/GanttChart/Toolbar.js","tiles/GanttChart/GanttView.js","actions/gantt.js","tiles/GanttChart/index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","_blueprintjs_core__WEBPACK_IMPORTED_MODULE_2__","_blueprintjs_core__WEBPACK_IMPORTED_MODULE_3__","_blueprintjs_core__WEBPACK_IMPORTED_MODULE_4__","_blueprintjs_core__WEBPACK_IMPORTED_MODULE_5__","_blueprintjs_core__WEBPACK_IMPORTED_MODULE_6__","_blueprintjs_core__WEBPACK_IMPORTED_MODULE_7__","_blueprintjs_select__WEBPACK_IMPORTED_MODULE_8__","renderItem","active","scenario","_ref","handleClick","a","createElement","key","concat","id","text","name","onClick","connect","state","scenarios","model","programmes","_ref2","handleChange","items","itemRenderer","onItemSelect","onActiveItemChange","activeItem","popoverProps","position","Position","RIGHT_BOTTOM","filterable","style","display","marginLeft","marginRight","width","fill","small","intent","Intent","PRIMARY","rightIcon","alignText","Alignment","LEFT","getGanttLinkType","type","CONSTANTS","Error","getGanttData","scenarioId","find","phases","phaseSensitivity","phaseLinks","data","map","phase","foundSensitivity","sen","values","start_date","moment","start","format","duration","links","link","source","sourceId","target","targetId","Gantt","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","dark","reinitialise","value","gantt","config","min_column_width","scale_unit","date_scale","scale_height","subscales","unit","step","date","templates","date_to_str","template","month","getMonth","remainder","year","subtract","end","add","nextProps","tasksChanged","tasks","zoomChanged","zoom","heightChanged","size","colorChanged","clearAll","cssClass","layout","css","rows","cols","view","scrollX","scrollY","scroll","height","init","ganttContainer","setState","parse","render","_this2","ganttEventsInitialized","attachEvent","item","length","AppToaster","show","DANGER","message","task","onTaskUpdated","onLinkUpdated","_this3","initGanttEvents","show_progress","task_height","row_height","grid_header_class","grid_row_class","task_row_class","task_cell_class","scale_row_class","task_text","grid_file","duration_unit","_this4","setZoom","react_default","ref","input","Component","ownProps","editor","Toolbar","handleZoomChange","bind","assertThisInitialized","onZoomChange","buttonGroup","index","arr","isActive","icon","indexOf","buttons","ScenarioSelector","activeScenario","handleChangeScenario","GanttView","currentZoom","messages","initialScenario","logTaskUpdate","logLinkUpdate","slice","prevKey","unshift","pop","mode","addMessage","flexDirection","padding","Toolbar_Toolbar","react_sizeme","monitorHeight","flex","marginTop","overflow","backgroundColor","tiles_GanttChart_Gantt","handleTaskUpdate","handleLinkUpdate","dispatch","getState","newPhaseSensitivity","getScenarioById","objectSpread","types","typeKey","newPhaseValues","slip","element","updateGanttTask","addPhaseLink","Number","parseInt","deletePhaseLink"],"mappings":"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","file":"static/js/5.4fc5ca61.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { type Node } from 'react';\n\nimport { connect } from 'react-redux';\n\nimport { Alignment, ButtonGroup, Button, Intent, MenuItem, Position } from '@blueprintjs/core';\nimport { Select } from '@blueprintjs/select';\n\nimport { type Scenario } from '../../model/api/types';\nimport { type State } from '../../reducers/types';\n\ntype ScenarioSelectorProps = {\n  scenarios: Array<Scenario>,\n  active: Scenario,\n  handleChange: Scenario => void,\n};\n\ntype ItemProps = {\n  handleClick: MouseEvent => void,\n};\n\nconst renderItem = (active: Scenario) => (scenario: Scenario, { handleClick }: ItemProps): Node => {\n  return (\n    <MenuItem\n      key={`SCENARIO_SELECT_VALUE_${scenario.id}`}\n      text={scenario.name}\n      active={scenario.id === active.id}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport const ScenarioSelector = ({ scenarios, active, handleChange }: ScenarioSelectorProps) => {\n  return (\n    <div>\n      <Select\n        items={scenarios}\n        itemRenderer={renderItem(active)}\n        onItemSelect={scenario => handleChange(scenario)}\n        onActiveItemChange={scenario => handleChange(scenario)}\n        activeItem={active}\n        popoverProps={{ position: Position.RIGHT_BOTTOM }}\n        filterable={false}\n      >\n        <div style={{ display: 'inline-block', marginLeft: '7px', marginRight: '10px' }}>\n          Select Scenario:\n        </div>\n        <ButtonGroup style={{ width: '130px' }}>\n          <Button\n            fill\n            small\n            intent={Intent.PRIMARY}\n            rightIcon=\"caret-down\"\n            alignText={Alignment.LEFT}\n            text={active.name}\n          />\n        </ButtonGroup>\n      </Select>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: State) => ({\n  scenarios: state.model.programmes[0].scenarios,\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ScenarioSelector);\n","import moment from 'moment';\nimport * as CONSTANTS from '../../config/constants';\n\nconst getGanttLinkType = type => {\n  switch (type) {\n    case CONSTANTS.PHASE_LINK_START_TO_START:\n      return 1;\n    case CONSTANTS.PHASE_LINK_START_TO_FINISH:\n      return 3;\n    case CONSTANTS.PHASE_LINK_FINISH_TO_START:\n      return 0;\n    case CONSTANTS.PHASE_LINK_FINISH_TO_FINISH:\n      return 2;\n    default:\n      throw new Error('Unrecognised phase link type when populating gantt chart');\n  }\n};\n\nexport function getGanttData(state, scenarioId) {\n  const scenario = state.model.programmes[0].scenarios.find(scenario => scenario.id === scenarioId);\n  if (!scenario) {\n    throw new Error('Could not find scenario');\n  }\n\n  const phases = state.model.programmes[0].phases;\n  const phaseSensitivity = scenario.phaseSensitivity;\n  const phaseLinks = state.model.programmes[0].phaseLinks;\n  return {\n    data: phases.map(phase => {\n      const foundSensitivity = phaseSensitivity.find(sen => sen.id === phase.id);\n      let values = foundSensitivity ? foundSensitivity : phase;\n      return {\n        id: phase.id,\n        text: phase.name,\n        start_date: moment(values.start, CONSTANTS.DATE_FORMAT).format(CONSTANTS.GANTT_DATE_FORMAT),\n        duration: values.duration,\n      };\n    }),\n    links: phaseLinks.map(link => ({\n      id: link.id,\n      type: getGanttLinkType(link.type),\n      source: link.sourceId,\n      target: link.targetId,\n    })),\n  };\n}\n","/*global gantt*/\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport moment from 'moment';\n\nimport { Intent } from '@blueprintjs/core';\nimport { AppToaster } from '../../components/Toaster';\n\nimport 'dhtmlx-gantt';\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\nimport './Gantt.css';\nimport { getGanttData } from './selectors';\n\nconst iconRenderString =\n  '<span style=\"margin-right: 10px;\" icon=\"gantt-chart\" class=\"bp3-icon bp3-icon-gantt-chart\"><svg data-icon=\"gantt-chart\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"><desc>gantt-chart</desc><path d=\"M10 10c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1h-4c-.55 0-1 .45-1 1zM6 7c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H7c-.55 0-1 .45-1 1zm9 5H2V3c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zM4 5h3c.55 0 1-.45 1-1s-.45-1-1-1H4c-.55 0-1 .45-1 1s.45 1 1 1z\" fill-rule=\"evenodd\"></path></svg></span>';\n\nclass Gantt extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dark: false,\n      reinitialise: false,\n    };\n  }\n\n  setZoom(value) {\n    switch (value) {\n      case 'Weeks':\n        gantt.config.min_column_width = 70;\n        gantt.config.scale_unit = 'month';\n        gantt.config.date_scale = '%F %Y';\n        gantt.config.scale_height = 60;\n        gantt.config.subscales = [{ unit: 'week', step: 1, date: 'Week #%W' }];\n        gantt.config.step = 1;\n        gantt.templates.date_scale = date => gantt.date.date_to_str(gantt.config.date_scale)(date);\n        break;\n      case 'Months':\n        gantt.config.min_column_width = 70;\n        gantt.config.scale_unit = 'year';\n        gantt.config.date_scale = '%Y';\n        gantt.config.subscales = [{ unit: 'month', step: 1, date: '%F' }];\n        gantt.config.scale_height = 60;\n        gantt.config.step = 1;\n        gantt.templates.date_scale = date => gantt.date.date_to_str(gantt.config.date_scale)(date);\n        break;\n      case 'Quarters':\n        gantt.config.min_column_width = 70;\n        gantt.config.scale_unit = 'year';\n        gantt.config.date_scale = '%Y';\n        gantt.config.step = 1;\n        gantt.templates.date_scale = date => gantt.date.date_to_str(gantt.config.date_scale)(date);\n        gantt.config.subscales = [\n          {\n            unit: 'quarter',\n            step: 1,\n            template: date => {\n              const month = date.getMonth();\n              let q_num;\n\n              if (month >= 9) {\n                q_num = 4;\n              } else if (month >= 6) {\n                q_num = 3;\n              } else if (month >= 3) {\n                q_num = 2;\n              } else {\n                q_num = 1;\n              }\n\n              return 'Q' + q_num;\n            },\n          },\n        ];\n        gantt.config.scale_height = 60;\n        break;\n      case 'Years':\n        gantt.config.min_column_width = 70;\n        gantt.config.scale_unit = 'year';\n        gantt.config.date_scale = '%Y';\n        gantt.config.step = 10;\n        gantt.config.subscales = [{ unit: 'year', step: 1, date: '%Y' }];\n        gantt.config.scale_height = 60;\n        gantt.templates.date_scale = function(date) {\n          const remainder = moment(date).year() % 10;\n          const start = moment(date)\n            .subtract(remainder, 'years')\n            .year();\n          const end = moment(date)\n            .add(9 - remainder, 'years')\n            .year();\n          return `${start}-${end}`;\n        };\n        break;\n      default:\n        break;\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.dark !== state.dark) {\n      return {\n        dark: props.dark,\n        reinitialise: true,\n      };\n    } else return null;\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const tasksChanged = this.props.tasks !== nextProps.tasks;\n    const zoomChanged = this.props.zoom !== nextProps.zoom;\n    const heightChanged = this.props.size !== nextProps.size;\n    const colorChanged = this.props.dark !== nextProps.dark;\n    return tasksChanged || zoomChanged || heightChanged || colorChanged;\n  }\n\n  componentDidUpdate() {\n    gantt.clearAll();\n    if (this.state.reinitialise) {\n      const cssClass = this.props.dark ? 'gantt_container darkGantt' : 'gantt_container';\n      gantt.config.layout = {\n        css: cssClass,\n        rows: [\n          {\n            cols: [\n              { view: 'grid', id: 'grid', scrollX: 'scrollHor', scrollY: 'scrollVer' },\n              { view: 'timeline', id: 'timeline', scrollX: 'scrollHor', scrollY: 'scrollVer' },\n              { view: 'scrollbar', scroll: 'y', id: 'scrollVer' },\n            ],\n          },\n          { view: 'scrollbar', scroll: 'x', id: 'scrollHor', height: 20 },\n        ],\n      };\n      gantt.init(this.ganttContainer);\n      this.setState({ reinitialise: false });\n    }\n    gantt.parse(this.props.tasks);\n    gantt.render();\n  }\n\n  initGanttEvents() {\n    if (gantt.ganttEventsInitialized) {\n      return;\n    }\n    gantt.ganttEventsInitialized = true;\n\n    gantt.attachEvent('onBeforeTaskDelete', (id, item) => {\n      if (this.props.tasks.data.length > 1) {\n        return true;\n      }\n      AppToaster.show({\n        intent: Intent.DANGER,\n        message: 'Cannot delete last phase, there must be at least one phase defined in the model',\n      });\n      return false;\n    });\n\n    gantt.attachEvent('onAfterTaskAdd', (id, task) => {\n      if (this.props.onTaskUpdated) {\n        this.props.onTaskUpdated(id, 'inserted', task, this.props.scenarioId);\n      }\n    });\n\n    gantt.attachEvent('onAfterTaskUpdate', (id, task) => {\n      if (this.props.onTaskUpdated) {\n        this.props.onTaskUpdated(id, 'updated', task, this.props.scenarioId);\n      }\n    });\n\n    gantt.attachEvent('onAfterTaskDelete', id => {\n      if (this.props.onTaskUpdated) {\n        this.props.onTaskUpdated(id, 'deleted', this.props.scenarioId);\n      }\n    });\n\n    gantt.attachEvent('onAfterLinkAdd', (id, link) => {\n      if (this.props.onLinkUpdated) {\n        this.props.onLinkUpdated(id, 'inserted', link);\n      }\n    });\n\n    gantt.attachEvent('onAfterLinkUpdate', (id, link) => {\n      if (this.props.onLinkUpdated) {\n        this.props.onLinkUpdated(id, 'updated', link);\n      }\n    });\n\n    gantt.attachEvent('onAfterLinkDelete', (id, link) => {\n      if (this.props.onLinkUpdated) {\n        this.props.onLinkUpdated(id, 'deleted');\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.initGanttEvents();\n    gantt.config.show_progress = false;\n    const cssClass = this.props.dark ? 'gantt_container darkGantt' : 'gantt_container';\n    gantt.config.layout = {\n      css: cssClass,\n      rows: [\n        {\n          cols: [\n            { view: 'grid', id: 'grid', scrollX: 'scrollHor', scrollY: 'scrollVer' },\n            { view: 'timeline', id: 'timeline', scrollX: 'scrollHor', scrollY: 'scrollVer' },\n            { view: 'scrollbar', scroll: 'y', id: 'scrollVer' },\n          ],\n        },\n        { view: 'scrollbar', scroll: 'x', id: 'scrollHor', height: 20 },\n      ],\n    };\n    gantt.config.task_height = 12;\n    gantt.config.row_height = 24;\n    gantt.templates.grid_header_class = () => (this.props.dark ? 'darkGantt' : '');\n    gantt.templates.grid_row_class = () => (this.props.dark ? 'darkGantt' : '');\n    gantt.templates.task_row_class = () => (this.props.dark ? 'darkGantt' : '');\n    gantt.templates.task_cell_class = () => (this.props.dark ? 'darkGantt' : '');\n    gantt.templates.scale_row_class = () => (this.props.dark ? 'darkGantt' : '');\n    gantt.templates.task_text = () => '';\n    gantt.templates.grid_file = () => iconRenderString;\n    gantt.config.duration_unit = 'week';\n\n    gantt.init(this.ganttContainer);\n    gantt.parse(this.props.tasks);\n  }\n\n  render() {\n    this.setZoom(this.props.zoom);\n    return (\n      <div\n        ref={input => {\n          this.ganttContainer = input;\n        }}\n        style={{ width: '100%', height: this.props.size.height }}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  dark: state.editor.dark,\n  tasks: getGanttData(state, ownProps.scenarioId),\n});\n\nexport default connect(mapStateToProps)(Gantt);\n","import React, { Component } from 'react';\nimport { ButtonGroup, Button } from '@blueprintjs/core';\nimport ScenarioSelector from '../../components/ScenarioSelector';\n\nexport default class Toolbar extends Component {\n  constructor(props) {\n    super(props);\n    this.handleZoomChange = this.handleZoomChange.bind(this);\n  }\n\n  handleZoomChange(value) {\n    if (this.props.onZoomChange) {\n      this.props.onZoomChange(value);\n    }\n  }\n\n  render() {\n    return (\n      <ButtonGroup style={{ marginLeft: 10, marginRight: 10 }}>\n        <ButtonGroup>\n          {['Weeks', 'Months', 'Quarters', 'Years'].map((value, index, arr) => {\n            const isActive = this.props.zoom === value;\n            const icon = index < arr.indexOf(this.props.zoom) ? 'zoom-out' : 'zoom-in';\n            return (\n              <Button\n                key={value}\n                value={value}\n                active={isActive}\n                onClick={() => this.handleZoomChange(value)}\n                text={value}\n                icon={!isActive && icon}\n              />\n            );\n          })}\n        </ButtonGroup>\n        <ScenarioSelector\n          active={this.props.activeScenario}\n          handleChange={this.props.handleChangeScenario}\n        />\n      </ButtonGroup>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SizeMe } from 'react-sizeme';\n\nimport { getGanttData } from './selectors';\nimport { updateGanttTask } from '../../actions/gantt';\n\nimport Gantt from './Gantt';\nimport Toolbar from './Toolbar';\nimport { addPhaseLink, deletePhaseLink } from '../../actions/model';\n\n// let data = {\n//   data: [\n//     { id: 1, text: 'Task #1', start_date: '15-04-2017', duration: 3, progress: 0.6 },\n//     { id: 2, text: 'Task #2', start_date: '18-04-2017', duration: 3, progress: 0.4 },\n//   ],\n//   links: [{ id: 1, source: 1, target: 2, type: '0' }],\n// };\n\nclass GanttView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentZoom: 'Quarters',\n      messages: [],\n      activeScenario: props.initialScenario,\n    };\n\n    this.handleZoomChange = this.handleZoomChange.bind(this);\n    this.logTaskUpdate = this.logTaskUpdate.bind(this);\n    this.logLinkUpdate = this.logLinkUpdate.bind(this);\n  }\n\n  addMessage(message) {\n    var messages = this.state.messages.slice();\n    var prevKey = messages.length ? messages[0].key : 0;\n\n    messages.unshift({ key: prevKey + 1, message });\n    if (messages.length > 40) {\n      messages.pop();\n    }\n    this.setState({ messages });\n  }\n\n  logTaskUpdate(id, mode, task) {\n    let text = task && task.text ? ` (${task.text})` : '';\n    let message = `Task ${mode}: ${id} ${text}`;\n    this.addMessage(message);\n  }\n\n  logLinkUpdate(id, mode, link) {\n    let message = `Link ${mode}: ${id}`;\n    if (link) {\n      message += ` ( source: ${link.source}, target: ${link.target} )`;\n    }\n    this.addMessage(message);\n  }\n\n  handleZoomChange(zoom) {\n    this.setState({\n      currentZoom: zoom,\n    });\n  }\n\n  render() {\n    return (\n      <div style={{ display: 'flex', flexDirection: 'column', padding: 10, height: '100%' }}>\n        <Toolbar\n          onZoomChange={this.handleZoomChange}\n          zoom={this.state.currentZoom}\n          activeScenario={this.state.activeScenario}\n          handleChangeScenario={scenario => this.setState({ activeScenario: scenario })}\n        />\n        <SizeMe monitorHeight>\n          {({ size }) => {\n            return (\n              <div\n                style={{\n                  flex: 1,\n                  flexDirection: 'column',\n                  marginTop: 10,\n                  height: '100%',\n                  overflow: 'hidden',\n                  backgroundColor: '#30404d',\n                }}\n              >\n                <Gantt\n                  zoom={this.state.currentZoom}\n                  onTaskUpdated={this.props.handleTaskUpdate}\n                  onLinkUpdated={this.props.handleLinkUpdate}\n                  size={size}\n                  scenarioId={this.state.activeScenario.id}\n                />\n              </div>\n            );\n          }}\n        </SizeMe>\n      </div>\n    );\n  }\n}\n\nexport const mapStateToProps = state => ({\n  initialScenario: state.model.programmes[0].scenarios[0],\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  handleTaskUpdate: (id, mode, task, scenarioId) => {\n    dispatch(updateGanttTask(id, mode, task, scenarioId));\n  },\n  handleLinkUpdate: (id, mode, link) => {\n    switch (mode) {\n      case 'inserted':\n        return dispatch(addPhaseLink(id, Number.parseInt(link.type), link.source, link.target));\n      case 'deleted':\n        return dispatch(deletePhaseLink(id));\n      default:\n        throw new Error('Unknown link update mode');\n    }\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GanttView);\n","import moment from 'moment';\n\nimport * as types from './types';\nimport * as CONSTANTS from '../config/constants';\nimport { getScenarioById } from '../model/api';\n\ntype Task = {\n  id: string,\n  text: string,\n  duration: number, // Weeks\n  start_date: Date,\n  end_date: Date,\n};\n\ntype TaskUpdateMode = 'updated' | 'deleted';\n\nexport function updateGanttTask(id: string, mode: TaskUpdateMode, task: Task, scenarioId: string) {\n  // Key will always be phases\n  const key = CONSTANTS.PHASE_KEY;\n\n  switch (mode) {\n    case 'updated':\n      // Mutate values of task to model instance\n      const values = {\n        name: task.text,\n        duration: task.duration,\n        start: moment(task.start_date).format(CONSTANTS.DATE_FORMAT),\n      };\n\n      return (dispatch: types.Dispatch, getState: types.GetState) => {\n        const state = getState();\n        const scenario = getScenarioById(state.model, scenarioId);\n        const phaseSensitivity = scenario.phaseSensitivity;\n        const newPhaseSensitivity = phaseSensitivity.map(sen =>\n          sen.id === id\n            ? {\n                ...sen,\n                duration: values.duration,\n                start: values.start,\n              }\n            : sen);\n        // dispatch({\n        //   type: types.UPDATE_ATOM,\n        //   id,\n        //   key,\n        //   values,\n        // });\n        dispatch({\n          type: types.UPDATE_SENSITIVITY,\n          id: scenarioId,\n          typeKey: 'phaseSensitivity',\n          values: newPhaseSensitivity,\n        });\n      };\n    case 'deleted':\n      return {\n        type: types.DELETE_ATOM,\n        id,\n        key,\n      };\n    case 'inserted':\n      const newPhaseValues: PhaseData = {\n        name: task.text,\n        duration: task.duration,\n        start: moment(task.start_date).format(CONSTANTS.DATE_FORMAT),\n        slip: CONSTANTS.PHASE_SLIP_RULE_FIXED,\n      };\n      return {\n        type: types.ADD_ATOM,\n        key,\n        element: newPhaseValues,\n      };\n    default:\n      throw new Error('Unrecognised gantt update mode');\n  }\n}\n","import GanttView from './GanttView';\n\nexport default GanttView;\n"],"sourceRoot":""}